{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/admins/SubjectManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/admins/SubjectManagement.vue","mtime":1639589002531},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1638461225625},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\n//   import projects from '../Tables/projects'\nimport projects from \"../Tables/projects\";\nimport users from \"../Tables/users\";\n//   import LightTable from \"../Tables/RegularTables/LightTable\";\n//   import DarkTable from \"../Tables/RegularTables/DarkTable\";\n// import { get } from '../services/services'\nimport { get, put,del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nimport { mapGetters } from \"vuex\";\nVue.prototype.$confirm = MessageBox.confirm;\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      keyword: null,\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      student: [],\n      form: {\n        className: \"className\",\n        headTeacher: \"headTeacher\",\n        schoolYear: \"schoolYear\",\n      },\n      classObj: {},\n      multipleSelection: [],\n    };\n  },\n  created() {\n    // this.fetchData();\n    // this.getClassData()\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getClassData();\n    },\n    \"$route.params.id\": function (id) {\n      this.handleDetail();\n    },\n    \n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  methods: {\n    getClassData(currentPage) {\n      let url =\n        \"http://localhost:8000/api/admin/grade/\"+ this.$route.params.id +\"?page=\"+ this.currentPage ;\n      // console.log(\"URL\",url);\n      get(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.perPage = res.data.data.per_page;\n          this.totalPage = res.data.data.total;\n          this.posts = res.data.data;\n          // console.log(\"ResponLop\", this.posts);\n      \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleDetail(index, row) {\n    this.$router.push('/admin/grade/class/'+row.id)\n  console.log(this.$router.push)\n    },\n    // handleDetail(index, row) {\n    //     let data = {\n    //       name: this.model.name,\n    //       email: this.model.email,\n    //       password: this.model.password,\n    //       // is_admin: this.is_admin\n    //     }\n    //     this.$store.dispatch('registerAdmin', data)\n    //    .then(() => this.$router.push('/admin/grade/class/'+row.id))\n    //    .catch(err => console.log(err))\n      \n    //   },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getClassById(id) {\n      let url = \"http://localhost:8000/api/admin/class/delete/\" + id;\n      let json = await get(url);\n      return json;\n    },\n    async handleDelete(index, row) {\n      this.dialogDelete = true\n      const res = await this.getClassById(row.id);\n      const user = res.data;\n      // console.log(user);\n      this.classObj = user.data;\n    },\n    confirmDelete(){\n      let url = \"http://localhost:8000/admin/class/delete/\" + this.classObj.id\n      del(url)\n        .then((res) => {\n          console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getClassData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getClassData(currentPage);\n    this.handleDetail(currentPage);\n  },\n};\n",{"version":3,"sources":["SubjectManagement.vue"],"names":[],"mappingsfile":"SubjectManagement.vue","sourceRoot":"src/views/admins","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n    </base-header>\n\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n        <b-col>\n          <b-card no-body>\n            <b-card-header class=\"border-0\">\n              <h3 class=\"mb-0\">Class List</h3>\n            </b-card-header>\n\n            <el-table\n              class=\"table-responsive table\"\n              header-row-class-name=\"thead-light\"\n              :data=\"posts\"\n              @selection-change=\"handleSelectionChange\"\n            >\n              <el-table-column type=\"selection\" min-width=\"55px\">\n              </el-table-column>\n\n              <el-table-column\n                label=\"ClassName\"\n                min-width=\"150px\"\n                prop=\"className\"\n              >\n              </el-table-column>\n              <el-table-column\n                label=\"HeadTeacher\"\n                prop=\"headTeacher\"\n                min-width=\"140px\"\n              >\n              </el-table-column>\n              <el-table-column\n                label=\"SchoolYear\"\n                prop=\"schoolYear\"\n                min-width=\"140px\"\n              >\n              </el-table-column>\n              <!-- <el-table-column label=\"Email\"\n                             prop=\"email\"\n                             min-width=\"250px\">\n            </el-table-column> -->\n              <el-table-column label=\"Action\" min-width=\"290px\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button\n                    size=\"mini\"\n                    type=\"success\"\n                    @click=\"handleDetail(scope.$index, scope.row)\"\n                    >Student List</el-button\n                  >\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDelete(scope.$index, scope.row)\"\n                    >Delete</el-button\n                  >\n                </template>\n              </el-table-column>\n\n            </el-table>\n\n            <b-card-footer class=\"py-4 d-flex justify-content-end position-relative\">\n              <!-- <base-pagination v-model=\"currentPage\" :per-page=\"20\" :total=\"50\" :@input=\"getTeacherData(currentPage)\"></base-pagination> -->\n              <el-row class=\"position-absolute\" v-if=\"multipleSelection.length > 1\">\n                <el-button type=\"danger\" @click=\"dialogMultiDelete=true\">Xoá các lựa chọn</el-button>\n              </el-row>\n              <b-pagination\n                :total-rows=\"totalPage\"\n                v-model=\"currentPage\"\n                :per-page=\"perPage\"\n                @input=\"getClassData(currentPage)\"\n              >\n              <template v-slot:prev-text>\n                  <a class=\"page-link\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n                <template v-slot:next-text>\n                  <a class=\"page-link\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n              </b-pagination>\n            </b-card-footer>\n          </b-card>\n        </b-col>\n      </b-row>\n  \n      <el-dialog\n        title=\"Chinh sua thong tin Lop hoc\"\n        :visible.sync=\"dialogEdit\" \n        :before-close=\"handleClose\"\n        width=\"70%\"\n      >\n        <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"ClassName\">\n            <el-input\n              v-model=\"form.className\"\n              :placeholder=\"classObj.className\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"HeadTeacher\">\n            <el-input\n              v-model=\"form.headTeacher\"\n              :placeholder=\"classObj.headTeacher\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"schoolYear\">\n            <el-input\n              v-model=\"form.schoolYear\"\n              :placeholder=\"classObj.schoolYear\"\n            ></el-input>\n          </el-form-item>\n          <!-- <el-form-item label=\"Activity zone\">\n            <el-select\n              v-model=\"form.region\"\n              placeholder=\"please select your zone\"\n            >\n              <el-option label=\"Zone one\" value=\"shanghai\"></el-option>\n              <el-option label=\"Zone two\" value=\"beijing\"></el-option>\n            </el-select>\n          </el-form-item> -->\n          <!-- <el-form-item label=\"Activity time\">\n            <el-col :span=\"11\">\n              <el-date-picker\n                type=\"date\"\n                placeholder=\"Pick a date\"\n                v-model=\"form.date1\"\n                style=\"width: 100%\"\n              ></el-date-picker>\n            </el-col>\n            <el-col class=\"line\" :span=\"2\">-</el-col>\n            <el-col :span=\"11\">\n              <el-time-picker\n                placeholder=\"Pick a time\"\n                v-model=\"form.date2\"\n                style=\"width: 100%\"\n              ></el-time-picker>\n            </el-col>\n          </el-form-item>\n          <el-form-item label=\"Instant delivery\">\n            <el-switch v-model=\"form.delivery\"></el-switch>\n          </el-form-item>\n          <el-form-item label=\"Activity type\">\n            <el-checkbox-group v-model=\"form.type\">\n              <el-checkbox label=\"Online activities\" name=\"type\"></el-checkbox>\n              <el-checkbox\n                label=\"Promotion activities\"\n                name=\"type\"\n              ></el-checkbox>\n              <el-checkbox label=\"Offline activities\" name=\"type\"></el-checkbox>\n              <el-checkbox\n                label=\"Simple brand exposure\"\n                name=\"type\"\n              ></el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n          <el-form-item label=\"Resources\">\n            <el-radio-group v-model=\"form.resource\">\n              <el-radio label=\"Sponsor\"></el-radio>\n              <el-radio label=\"Venue\"></el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Activity form\">\n            <el-input type=\"textarea\" v-model=\"form.desc\"></el-input>\n          </el-form-item> -->\n          <!-- <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmitEdit\">Update</el-button>\n            <el-button @click=\"dialogEdit = false\">Cancel</el-button>\n          </el-form-item> -->\n        </el-form>\n        <!-- <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"dialogEdit = false\"\n            >Confirm</el-button\n          >\n        </span> -->\n      </el-dialog>\n      <el-dialog\n        title=\"Warning\"\n        :visible.sync=\"dialogDelete\"\n        width=\"30%\"\n        center\n      >\n        <span\n          >Bạn có muốn xoá người này</span\n        >\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmDelete\">Confirm</el-button>\n          <el-button  @click=\"dialogDelete = false\"\n            >Cancle</el-button\n          >\n        </span>\n      </el-dialog>\n      <el-dialog\n        title=\"Warning\"\n        :visible.sync=\"dialogMultiDelete\"\n        width=\"30%\"\n        center\n      >\n        <!-- <span\n          >Bạn có muốn xoá những người này</span>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmMultiDelete\">Confirm</el-button>\n          <el-button  @click=\"dialogMultiDelete = false\"\n            >Cancle</el-button\n          >\n        </span> -->\n      </el-dialog>\n    </b-container>\n  </div>\n</template>\n<script>\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\n//   import projects from '../Tables/projects'\nimport projects from \"../Tables/projects\";\nimport users from \"../Tables/users\";\n//   import LightTable from \"../Tables/RegularTables/LightTable\";\n//   import DarkTable from \"../Tables/RegularTables/DarkTable\";\n// import { get } from '../services/services'\nimport { get, put,del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nimport { mapGetters } from \"vuex\";\nVue.prototype.$confirm = MessageBox.confirm;\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      keyword: null,\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      student: [],\n      form: {\n        className: \"className\",\n        headTeacher: \"headTeacher\",\n        schoolYear: \"schoolYear\",\n      },\n      classObj: {},\n      multipleSelection: [],\n    };\n  },\n  created() {\n    // this.fetchData();\n    // this.getClassData()\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getClassData();\n    },\n    \"$route.params.id\": function (id) {\n      this.handleDetail();\n    },\n    \n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  methods: {\n    getClassData(currentPage) {\n      let url =\n        \"http://localhost:8000/api/admin/grade/\"+ this.$route.params.id +\"?page=\"+ this.currentPage ;\n      // console.log(\"URL\",url);\n      get(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.perPage = res.data.data.per_page;\n          this.totalPage = res.data.data.total;\n          this.posts = res.data.data;\n          // console.log(\"ResponLop\", this.posts);\n      \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleDetail(index, row) {\n    this.$router.push('/admin/grade/class/'+row.id)\n  console.log(this.$router.push)\n    },\n    // handleDetail(index, row) {\n    //     let data = {\n    //       name: this.model.name,\n    //       email: this.model.email,\n    //       password: this.model.password,\n    //       // is_admin: this.is_admin\n    //     }\n    //     this.$store.dispatch('registerAdmin', data)\n    //    .then(() => this.$router.push('/admin/grade/class/'+row.id))\n    //    .catch(err => console.log(err))\n      \n    //   },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getClassById(id) {\n      let url = \"http://localhost:8000/api/admin/class/delete/\" + id;\n      let json = await get(url);\n      return json;\n    },\n    async handleDelete(index, row) {\n      this.dialogDelete = true\n      const res = await this.getClassById(row.id);\n      const user = res.data;\n      // console.log(user);\n      this.classObj = user.data;\n    },\n    confirmDelete(){\n      let url = \"http://localhost:8000/admin/class/delete/\" + this.classObj.id\n      del(url)\n        .then((res) => {\n          console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getClassData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getClassData(currentPage);\n    this.handleDetail(currentPage);\n  },\n};\n</script>\n<style>\n.el-table.table-dark {\n  background-color: #172b4d;\n  color: #f8f9fe;\n}\n\n.el-table.table-dark th,\n.el-table.table-dark tr {\n  background-color: #172b4d;\n}\n\n.el-table.table-dark td,\n.el-table.table-dark th.is-leaf {\n  border-bottom: none;\n}\n.el-table .cell,\n.el-table th div {\n  overflow: inherit !important;\n}\n.el-table th > .cell {\n  width: auto;\n}\n.position-relative{\n  position: relative;\n}\n.position-absolute{\n  position: absolute;\n  left: 10%;\n}\n</style>\n"]}]}