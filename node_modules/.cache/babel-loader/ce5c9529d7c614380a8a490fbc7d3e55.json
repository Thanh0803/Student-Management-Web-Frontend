{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js!/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Student/Secure.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Student/Secure.vue","mtime":1644435764251},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1638461225625},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/thanh/DOAN/vue-admin-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/home/thanh/DOAN/vue-admin-frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import '~bootstrap-vue/dist/bootstrap-vue.css';\n// Charts\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\"; // Components\n\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\"; // Tables\n// import SocialTrafficTable from './Dashboard/SocialTrafficTable';\n// import PageVisitsTable from './Dashboard/PageVisitsTable';\n\nimport { get } from \"../../../services/services\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  components: {\n    LineChart: LineChart,\n    BarChart: BarChart,\n    BaseProgress: BaseProgress,\n    StatsCard: StatsCard // PageVisitsTable,\n    // SocialTrafficTable\n\n  },\n  computed: _objectSpread({}, mapGetters({\n    // map `this.doneCount` to `this.$store.getters.doneTodosCount`\n    user: \"user\"\n  })),\n  data: function data() {\n    return {\n      bigLineChart: {\n        allData: [[10, 20, 10, 30, 15, 40, 20, 60, 60], [0, 20, 5, 25, 10, 30, 15, 40, 40]],\n        activeIndex: 0,\n        chartData: {\n          datasets: [{\n            label: \"Performance\",\n            data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n          }],\n          labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        extraOptions: chartConfigs.blueChartOptions\n      },\n      redBarChart: {\n        chartData: {},\n        extraOptions: chartConfigs.blueChartOptions\n      },\n      arrTeacher: [],\n      arrStudent: [],\n      numClass: 0,\n      achievements: [],\n      indexX: [],\n      indexY: [],\n      chart: []\n    };\n  },\n  created: function created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchData();\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var url = \"http://localhost:8000/api/student/achievement/\" + this.$store.state.user.id;\n      get(url).then(function (res) {\n        console.log(res);\n        _this.achievements = res.data.data;\n\n        _this.initColChart();\n\n        _this.achievements.forEach(function (element) {\n          // console.log(element.id)\n          var url = \"http://localhost:8000/api/student/chart/student/\" + _this.$store.state.user.id + \"/class_sub/\" + element.class_sub;\n\n          _this.arrStudent.push(url);\n        }); // console.log(this.arrStudent);\n\n\n        _this.getAPI().then(function (results) {\n          console.log(_this.indexX.length);\n          console.log(_this.indexX);\n          var that = _this; // this.achievements.forEach((element,index) => {\n          //   let chartData = {\n          //     datasets: [\n          //       {\n          //         label: \"Điểm\",\n          //         data: that.indexX[0],\n          //       },\n          //     ],\n          //     labels: that.indexY[0]\n          //   };\n          //   console.log(that.indexX)\n          //   // this.chart.push(chartData)\n          //   // console.log(index)\n          // })\n          // // console.log(this.chart)\n        });\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    initBigChart: function initBigChart(index) {\n      // console.log(\"Achi\", this.achievements);\n      var chartData = {\n        datasets: [{\n          label: \"Performance\",\n          data: this.bigLineChart.allData[index]\n        }],\n        labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n      };\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = 0;\n    },\n    initColChart: function initColChart() {\n      var arr = this.achievements;\n      var x = [];\n      var y = [];\n      arr.forEach(function (element) {\n        // console.log(element.id)\n        x.push(element.subject_id);\n\n        if (element.mark.final_grade == null) {\n          y.push(0);\n        } else {\n          y.push(element.mark.final_grade);\n        }\n      });\n      var chartData = {\n        datasets: [{\n          label: \"Performance\",\n          data: y\n        }],\n        labels: x\n      };\n      this.redBarChart.chartData = chartData;\n    },\n    initDataStudentSubject: function initDataStudentSubject(class_sub) {\n      var student_id = this.$store.state.user.id;\n      var classSubject_id = class_sub;\n      var url = \"http://localhost:8000/api/student/chart/student/\" + student_id + \"/class_sub/\" + classSubject_id;\n      get(url).then(function (res) {\n        console.log(\"Chate\", res); //     let arr = res.data.data;\n        //     let x = [];\n        //     let y = []\n        //     arr.forEach((element) => {\n        //       // console.log(element.id)\n        //       x.push(element.test.testname)\n        //       if(element.mark == null) {y.push(0)}\n        //       else{\n        //       y.push(element.mark);\n        //       }\n        // });\n        //     let chartData = {\n        //       datasets: [\n        //         {\n        //           label: \"Điểm\",\n        //           data: y,\n        //         },\n        //       ],\n        //       labels:\n        //       x ,\n        //     };\n        //     this.bigLineChart.chartData = chartData;\n        //     this.bigLineChart.activeIndex = index;\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    getAPI: function () {\n      var _getAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var requests;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                requests = this.arrStudent.map(function (url) {\n                  return get(url);\n                }); // let indexX = [];\n                // let indexY = [];\n                // Promise.all waits until all jobs are resolved\n\n                Promise.all(requests).then(function (responses) {\n                  return responses.forEach(function (response) {\n                    var arr = response.data.data;\n                    var x = [];\n                    var y = [];\n                    arr.forEach(function (element) {\n                      // console.log(element.id)\n                      x.push(element.test.testname);\n\n                      if (element.mark == null) {\n                        y.push(0);\n                      } else {\n                        y.push(element.mark);\n                      }\n                    });\n                    var chartData = {\n                      datasets: [{\n                        label: \"Điểm\",\n                        data: y\n                      }],\n                      labels: x\n                    }; // indexX.push(x);\n\n                    _this2.chart.push(chartData); // this.indexY.push(y)\n                    // // indexY.push(y);\n                    // console.log(\"X\",this.indexX[0])\n\n                  });\n                }); // console.log(\"X\",this.indexX[0])\n                // console.log(\"Y\",indexY)\n                // this.indexX = indexX;\n                // this.indexY = indexY;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAPI() {\n        return _getAPI.apply(this, arguments);\n      }\n\n      return getAPI;\n    }()\n  },\n  mounted: function mounted() {\n    this.initBigChart(0); // this.initDataTeacher();\n    // this.initDataStudent();\n    // this.initDataClass();\n  }\n};",{"version":3,"sources":["Secure.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <h1> Welcome Phan Ngoc Thao!</h1>\n      \n    </base-header>\n\n    <!--Charts-->\n\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n  \n        <b-col xl=\"5\" class=\"mt-8\">\n          <div class=\"pl-lg-4\">\n            <h6 class=\"heading-small text-muted mb-4\">Student's Inofrmation</h6>\n            <b-row>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Fullname</label>\n                <br />\n                <span class=\"information\">{{ user.fullname }}</span>\n              </b-col>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Email </label>\n                <br />\n                <span class=\"information\">{{ user.email }}</span>\n              </b-col>\n            </b-row>\n            <b-row>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Gender </label>\n                <br />\n                <span class=\"information\">{{ user.gender }}</span>\n              </b-col>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Telephone </label>\n                <br />\n                <span class=\"information\">{{ user.phone }}</span>\n              </b-col>\n            </b-row>\n          </div>\n        </b-col>\n      </b-row>\n      <b-row\n        class=\"mt-5\"\n        v-for=\"(item, index) in achievements\"\n        :item=\"item\"\n        :index=\"index\"\n        :key=\"item.id\"\n      >\n        <h2 class=\"mb-3\">Bộ môn - {{ item.subject_id }}</h2>\n        <b-col xl=\"12\" class=\"mb-5 mb-xl-0\">\n          <card type=\"default\" header-classes=\"bg-transparent\">\n            <b-row align-v=\"center\" slot=\"header\">\n              <b-col>\n                <h6 class=\"text-light text-uppercase ls-1 mb-1\">\n                  Thành tích học tập\n                </h6>\n                <h5 class=\"h3 h5-old text-white mb-0\">Bảng điểm</h5>\n              </b-col>\n              <b-col>\n                <b-nav class=\"nav-pills justify-content-end\">\n                  <b-nav-item\n                    class=\"mr-2 mr-md-0\"\n                    :active=\"bigLineChart.activeIndex === 0\"\n                    link-classes=\"py-2 px-3\"\n                    @click.prevent=\"initBigChart(0)\"\n                  >\n                    <span class=\"d-none d-md-block\">Học kì</span>\n                    <span class=\"d-md-none\">M</span>\n                  </b-nav-item>\n                </b-nav>\n              </b-col>\n            </b-row>\n            <!-- <bar-chart\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"chart[index]\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            \n            </bar-chart> -->\n            <bar-chart\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"chart[index]\"\n            >\n            </bar-chart>\n          </card>\n        </b-col>\n      </b-row>\n\n    </b-container>\n  </div>\n</template>\n<script>\n// import '~bootstrap-vue/dist/bootstrap-vue.css';\n// Charts\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\n\n// Components\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\";\n\n// Tables\n// import SocialTrafficTable from './Dashboard/SocialTrafficTable';\n// import PageVisitsTable from './Dashboard/PageVisitsTable';\nimport { get } from \"../../../services/services\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    BaseProgress,\n    StatsCard,\n    // PageVisitsTable,\n    // SocialTrafficTable\n  },\n  computed: {\n    ...mapGetters({\n      // map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [\n          [10, 20, 10, 30, 15, 40, 20, 60, 60],\n          [0, 20, 5, 25, 10, 30, 15, 40, 40],\n        ],\n        activeIndex: 0,\n        chartData: {\n          datasets: [\n            {\n              label: \"Performance\",\n              data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\n            },\n          ],\n          labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        },\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      redBarChart: {\n        chartData: {},\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      arrTeacher: [],\n      arrStudent: [],\n      numClass: 0,\n      achievements: [],\n      indexX: [],\n      indexY: [],\n      chart:[]\n    };\n  },\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      let url =\n        \"http://localhost:8000/api/student/achievement/\" +\n        this.$store.state.user.id;\n      get(url)\n        .then((res) => {\n          console.log(res);\n          this.achievements = res.data.data;\n          this.initColChart();\n          this.achievements.forEach((element) => {\n            // console.log(element.id)\n            var url =\n              \"http://localhost:8000/api/student/chart/student/\" +\n              this.$store.state.user.id +\n              \"/class_sub/\" +\n              element.class_sub;\n            this.arrStudent.push(url);\n          });\n          // console.log(this.arrStudent);\n          this.getAPI().then(results => {\n            console.log(this.indexX.length)\n            console.log(this.indexX)\n            const that = this\n            // this.achievements.forEach((element,index) => {\n            //   let chartData = {\n            //     datasets: [\n            //       {\n            //         label: \"Điểm\",\n            //         data: that.indexX[0],\n            //       },\n            //     ],\n            //     labels: that.indexY[0]\n            //   };\n            //   console.log(that.indexX)\n            //   // this.chart.push(chartData)\n            //   // console.log(index)\n            // })\n            // // console.log(this.chart)\n          }\n          );\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    initBigChart(index) {\n      // console.log(\"Achi\", this.achievements);\n      let chartData = {\n        datasets: [\n          {\n            label: \"Performance\",\n            data: this.bigLineChart.allData[index],\n          },\n        ],\n        labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      };\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = 0;\n    },\n    initColChart() {\n      let arr = this.achievements;\n      let x = [];\n      let y = [];\n      arr.forEach((element) => {\n        // console.log(element.id)\n        x.push(element.subject_id);\n        if (element.mark.final_grade == null) {\n          y.push(0);\n        } else {\n          y.push(element.mark.final_grade);\n        }\n      });\n      let chartData = {\n        datasets: [\n          {\n            label: \"Performance\",\n            data: y,\n          },\n        ],\n        labels: x,\n      };\n      this.redBarChart.chartData = chartData;\n    },\n    initDataStudentSubject(class_sub) {\n      let student_id = this.$store.state.user.id;\n      let classSubject_id = class_sub;\n      let url =\n        \"http://localhost:8000/api/student/chart/student/\" +\n        student_id +\n        \"/class_sub/\" +\n        classSubject_id;\n      get(url)\n        .then((res) => {\n          console.log(\"Chate\", res);\n          //     let arr = res.data.data;\n          //     let x = [];\n          //     let y = []\n          //     arr.forEach((element) => {\n\n          //       // console.log(element.id)\n          //       x.push(element.test.testname)\n          //       if(element.mark == null) {y.push(0)}\n          //       else{\n          //       y.push(element.mark);\n          //       }\n          // });\n          //     let chartData = {\n          //       datasets: [\n          //         {\n          //           label: \"Điểm\",\n          //           data: y,\n          //         },\n          //       ],\n          //       labels:\n          //       x ,\n          //     };\n          //     this.bigLineChart.chartData = chartData;\n          //     this.bigLineChart.activeIndex = index;\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    async getAPI() {\n      let requests = this.arrStudent.map((url) => get(url));\n      // let indexX = [];\n      // let indexY = [];\n      // Promise.all waits until all jobs are resolved\n      Promise.all(requests).then((responses) =>\n        responses.forEach((response) => {\n          let arr = response.data.data;\n          let x = [];\n          let y = [];\n          arr.forEach((element) => {\n            // console.log(element.id)\n            x.push(element.test.testname);\n            if (element.mark == null) {\n              y.push(0);\n            } else {\n              y.push(element.mark);\n            }\n          });\n          let chartData = {\n            datasets: [\n              {\n                label: \"Điểm\",\n                data: y,\n              },\n            ],\n            labels: \n            x ,\n          };\n          // indexX.push(x);\n          this.chart.push(chartData)\n          // this.indexY.push(y)\n          // // indexY.push(y);\n          // console.log(\"X\",this.indexX[0])\n        })\n      );\n      // console.log(\"X\",this.indexX[0])\n      // console.log(\"Y\",indexY)\n      // this.indexX = indexX;\n      // this.indexY = indexY;\n    },\n  },\n  mounted() {\n    this.initBigChart(0);\n    // this.initDataTeacher();\n    // this.initDataStudent();\n    // this.initDataClass();\n  },\n};\n</script>\n<style>\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n.h5-old {\n  font-size: 0.8125rem !important;\n}\n.information {\n  display: block;\n  width: 100%;\n  height: calc(1.5em + 1.25rem + 2px);\n  padding: 0.625rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #8898aa;\n  background-color: #f8f9fe;\n  background-clip: padding-box;\n  font-style: italic;\n  /* border: 1px solid #cad1d7; */\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n</style>\n"],"sourceRoot":"src/views/Pages/Student"}]}