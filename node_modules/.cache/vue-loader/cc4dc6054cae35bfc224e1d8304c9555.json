{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Teacher/StudentReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Teacher/StudentReport.vue","mtime":1641285254633},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1638461225625},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import '~bootstrap-vue/dist/bootstrap-vue.css';\n// Charts\n// import * as chartConfigs from \"@/components/Charts/config\";\n// import LineChart from \"@/components/Charts/LineChart\";\n// import BarChart from \"@/components/Charts/BarChart\";\n// import LineChartNew from \"@/components/Charts/LineChartNew\";\n// Components\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\";\n\n// Tables\n// import SocialTrafficTable from './Dashboard/SocialTrafficTable';\n// import PageVisitsTable from './Dashboard/PageVisitsTable';\nimport { get } from \"../../../services/services\";\nimport { mapGetters } from \"vuex\";\nimport Exporter from \"vue-chartjs-exporter\";\n// import html2canvas from \"html2canvas\";\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  Tag,\n  RadioGroup,\n} from \"element-ui\";\nimport Vue from \"vue\";\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    LineChartNew,\n    BaseProgress,\n    StatsCard,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Tag.name]: Tag,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n\n  },\n  computed: {\n    ...mapGetters({\n      // map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n    main_1() {\n      return this.status ? \"mb-5 mb-xl-0 mt--5\" : \"mb-5 mb-xl-0\";\n    },\n    main_2() {\n      return this.status ? \"information none\" : \"information\";\n    },\n    main_3() {\n      return this.status ? \"\" : \"none\";\n    },\n    notBack() {\n      return this.status2 ? \"mt-4\" : \"mt-4 none\";\n    },\n    back() {\n      return this.status2 ? \"none\" : \"mt-4\";\n    },\n    print() {\n      return this.status ? \" mb-7 mb-xl-4 none\" : \"mb-7 mb-xl-4\";\n    },\n  },\n  data() {\n    return {\n      studentObj: {},\n      redBarChart: {\n        chartData: {},\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      mark_avg: 0,\n      mark_sum: \"\",\n      download_status: \"Tải xuống báo cáo \",\n      status: true,\n      status2: true,\n      arrTest: [],\n      arrStudent: [],\n      numClass: 0,\n      value: \"\",\n      achievements: [],\n      indexX: [],\n      indexY: [],\n      chart: [],\n      options: [\n        {\n          value: \"Giỏi\",\n          label: \"Giỏi\",\n        },\n        {\n          value: \"Khá\",\n          label: \"Khá\",\n        },\n        {\n          value: \"Trung bình\",\n          label: \"Trung bình\",\n        },\n        {\n          value: \"Yếu\",\n          label: \"Yếu\",\n        },\n      ],\n      linedata: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: \"Data One\",\n            borderColor: \"#FC2525\",\n            pointBackgroundColor: \"white\",\n            borderWidth: 1,\n            pointBorderColor: \"white\",\n            backgroundColor: this.gradient,\n            data: [40, 39, 10, 40, 39, 80, 40],\n          },\n          {\n            label: \"Data Two\",\n            borderColor: \"#05CBE1\",\n            pointBackgroundColor: \"white\",\n            pointBorderColor: \"white\",\n            borderWidth: 1,\n            backgroundColor: this.gradient2,\n            data: [60, 55, 32, 10, 2, 12, 53],\n          },\n        ],\n      },\n    };\n  },\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.validation();\n  },\n  watch: {\n    value(after, before) {\n      // this.getResults();\n      this.mark_sum = this.value;\n      console.log(this.mark_sum);\n    },\n    // value()\n    \"$route.params.student_id\": function (detail_id) {\n      this.validation();\n    },\n  },\n  methods: {\n    validation() {\n      // console.log(this.$route.params.student_id)\n      let student_id = this.$route.params.student_id;\n      let url = \"http://localhost:8000/api/teacher/student/\" + student_id;\n      get(url)\n        .then((res) => {\n          const keyClass = JSON.parse(localStorage.getItem(\"keyClass\"));\n          // console.log(keyClass[0].id)\n          if (keyClass[0].id === res.data.data.class_id) {\n            if(res.data.data.conductSummary.data.length != 0)\n            {this.fetchData();\n            console.log(\"length\",res.data.data.conductSummary.data.length)\n            this.studentObj = res.data.data;}\n            else{\n              this.$router.push(\"/teacher\");\n            this.showNotification(\"danger\", \"Bạn phải tổng kết điểm ý thức trước\");\n            }\n          } else {\n            this.$router.push(\"/teacher\");\n            this.showNotification(\"danger\", \"Bạn không có quyền truy cập\");\n          }\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    fetchData() {\n      let url =\n        \"http://localhost:8000/api/teacher/achievement/student/\" +\n        this.$route.params.student_id;\n      get(url)\n        .then((res) => {\n          // console.log(res);\n          this.achievements = res.data.data;\n          this.initColChart();\n          let sum = 0;\n          let count = 0;\n          this.achievements.forEach((element) => {\n            // console.log(element.id)\n            if (\n              element.subject_id == \"Toán\" ||\n              element.subject_id == \"Ngữ Văn\"\n            ) {\n              sum += element.mark.final_grade * 2;\n              count += 2;\n            } else {\n              sum += element.mark.final_grade;\n              count++;\n            }\n            var url =\n              \"http://localhost:8000/api/teacher/chart/student/\" +\n              this.$route.params.student_id +\n              \"/class_sub/\" +\n              element.class_sub;\n            this.arrStudent.push(url);\n          });\n          let avg = sum / count;\n          this.mark_avg = avg.toFixed(2)\n          // console.log(this.arrStudent);\n          this.getAPI().then((results) => {\n            console.log(this.indexX.length);\n            console.log(this.indexX);\n            const that = this;\n            // this.achievements.forEach((element,index) => {\n            //   let chartData = {\n            //     datasets: [\n            //       {\n            //         label: \"Điểm\",\n            //         data: that.indexX[0],\n            //       },\n            //     ],\n            //     labels: that.indexY[0]\n            //   };\n            //   console.log(that.indexX)\n            //   // this.chart.push(chartData)\n            //   // console.log(index)\n            // })\n            // // console.log(this.chart)\n          });\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    initColChart() {\n      let arr = this.achievements;\n      let x = [];\n      let y = [];\n      arr.forEach((element) => {\n        console.log(element.id);\n        x.push(element.subject_id);\n        if (element.mark.final_grade == null) {\n          y.push(0);\n        } else {\n          y.push(element.mark.final_grade);\n        }\n      });\n      let chartData = {\n        datasets: [\n          {\n            label: \"Điểm\",\n            data: y,\n          },\n        ],\n        labels: x,\n      };\n      this.redBarChart.chartData = chartData;\n    },\n    async getAPI() {\n      // let requests = this.arrStudent.map((url) => get(url));\n      // Promise.all(requests).then((responses) =>\n      //   responses.forEach((response) => {\n      //     this.arrTest.push(response.data.data);\n      //     let arr = response.data.data;\n      //     let x = [];\n      //     let y = [];\n      //     arr.forEach((element) => {\n      //       x.push(element.test.testname);\n      //       if (element.mark == null) {\n      //         y.push(0);\n      //       } else {\n      //         y.push(element.mark);\n      //       }\n      //     });\n      //     let chartData = {\n      //       datasets: [\n      //         {\n      //           label: \"Điểm\",\n      //           data: y,\n\n      //         },\n      //       ],\n      //       labels: x,\n      //     };\n      //     this.chart.push(chartData);\n      //   })\n      // );\n\n      // let requests = this.arrStudent.map((url) => get(url));\n      // Promise.all(requests).then((responses) =>\n      //   responses.forEach((response) => {\n      //     this.arrTest.push(response.data.data);\n      //     let arr = response.data.data;\n      //     let x = [];\n      //     let y = [];\n      //     let z = [];\n      //     arr.forEach((element) => {\n      //       x.push(element.test.testname);\n      //       if (element.mark == null) {\n      //         y.push(0);\n      //       } else {\n      //         y.push(element.mark);\n      //       }\n      //     });\n      //     let chartData = {\n      //       datasets: [\n      //         {\n      //           label: \"Điểm\",\n      //           data: y,\n      //         },\n      //       ],\n      //       labels: x,\n      //     };\n      //     this.chart.push(chartData);\n      //   })\n      // );\n\n      let requests = this.arrStudent.map((url) => get(url));\n      Promise.all(requests).then((responses) =>\n        responses.forEach((response) => {\n          this.arrTest.push(response.data.data);\n        })\n      );\n    },\n    printPDF() {\n      if (this.mark_sum == \"\") {\n          this.showNotification(\"danger\", \"Bạn chưa chọn học lực\");\n      } else {\n        const that = this;\n        let promise = new Promise(function (resolve, reject) {\n          // the function is executed automatically when the promise is constructed\n          that.status = false;\n          that.download_status = \"Đang tải xuống\";\n          // after 1 second signal that the job is done with the result \"done\"\n          setTimeout(() => resolve(\"done\"), 3000);\n        });\n        promise.then((responses) => {\n          // let name =\n          let header = document.getElementById(\"header\");\n          let componet = [];\n          componet.push(header);\n          this.achievements.forEach((element) => {\n            let name = \"page\" + element.id;\n            let el = document.getElementById(name);\n            componet.push(el);\n          });\n          console.log(componet)\n          let exp = new Exporter(componet);\n          // let namefile = that.studentObj.fullname\n          exp.export_pdf().then((pdf) => {\n            pdf.save(\"report.pdf\");\n            that.status = true;\n            // this.download_status = \"Tải xuống báo cáo \";\n            this.status2 = false\n            // that.$route.push(\"/teacher/class/\" + this.studentObj.class_id)\n          });\n        });\n      }\n      // this.status = false;\n\n      // this.status = true;\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleBack(){\n      this.$router.push(\"/teacher/class/\" + this.studentObj.class_id);\n    }\n  },\n  mounted() {},\n};\n",{"version":3,"sources":["StudentReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentReport.vue","sourceRoot":"src/views/Pages/Teacher","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <h1>Xin chào {{ user.fullname }} !</h1>\n      <!-- <b-row>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total teacher\"\n            type=\"gradient-red\"\n            :sub-title=\"arrTeacher.toString()\"\n            icon=\"ni ni-active-40\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <span class=\"text-success mr-2\">3.48%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total student\"\n            type=\"gradient-orange\"\n            :sub-title=\"arrStudent.toString()\"\n            icon=\"ni ni-chart-pie-35\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <span class=\"text-success mr-2\">12.18%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total classs\"\n            type=\"gradient-green\"\n            :sub-title=\"numClass.toString()\"\n            icon=\"ni ni-chart-bar-32\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <span class=\"text-success mr-2\">15.08%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </template>\n          </stats-card>\n        </b-col>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total Admin\"\n            type=\"gradient-info\"\n            :sub-title=\"arrStudent.toString()\"\n            icon=\"ni ni-money-coins\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <span class=\"text-success mr-2\">13.98%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </template>\n          </stats-card>\n        </b-col>\n      </b-row> -->\n    </base-header>\n\n    <!--Charts-->\n\n    <b-container fluid class=\"realative\">\n      <div id=\"header\">\n        <b-row :class=\"print\">\n          <b-col xl=\"6\">\n            <h2 class=\"text-uppercase\">Bộ Giáo dục và Đào tạo</h2>\n            <h4 class=\"text-uppercase\">\n              Trường <span>{{ user.school }}</span>\n            </h4>\n          </b-col>\n          <b-col xl=\"6\">\n            <h1 class=\"text-uppercase text-center\">\n              Bảng điểm Tổng kết học kì 1\n            </h1>\n            <h3 class=\"text-uppercase text-center\">\n              Năm học 2020-2021 - Lớp\n              <span v-if=\"studentObj.class.classname\">{{\n                studentObj.class.classname\n              }}</span>\n            </h3>\n            <h5 class=\"text-uppercase text-center\">\n              Học sinh <span>{{ studentObj.fullname }}</span>\n            </h5>\n          </b-col>\n        </b-row>\n        <b-row>\n          <b-col xl=\"7\" :class=\"main_1\">\n            <card header-classes=\"bg-transparent\">\n              <b-row align-v=\"center\" slot=\"header\">\n                <b-col>\n                  <h6 class=\"text-uppercase text-muted ls-1 mb-1\">\n                    {{ studentObj.fullname }}\n                  </h6>\n                  <h5 class=\"h3 h5-old mb-0\">Tổng quan</h5>\n                </b-col>\n              </b-row>\n\n              <bar-chart\n                :height=\"350\"\n                ref=\"barChart\"\n                :chart-data=\"redBarChart.chartData\"\n              >\n              </bar-chart>\n            </card>\n          </b-col>\n          <b-col xl=\"5\" class=\"mt-2\">\n            <div class=\"pl-lg-4\">\n              <h6 class=\"heading-small text-muted mb-4\">Thông tin học sinh</h6>\n              <b-row>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Họ và tên </label>\n                  <br />\n                  <span class=\"information\">{{ studentObj.fullname }}</span>\n                </b-col>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Email </label>\n                  <br />\n                  <span class=\"information\">{{ studentObj.email }}</span>\n                </b-col>\n              </b-row>\n              <b-row>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Giới tính </label>\n                  <br />\n                  <span class=\"information\">{{ studentObj.gender }}</span>\n                </b-col>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Số điện thoại </label>\n                  <br />\n                  <span class=\"information\">{{ studentObj.phone }}</span>\n                </b-col>\n              </b-row>\n            </div>\n\n            <div class=\"pl-lg-4 mt-4\">\n              <h6 class=\"heading-small text-muted mb-4\">Tổng kết thành tích</h6>\n              <b-row>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Điểm </label>\n                  <br />\n                  <span class=\"information\">{{ mark_avg }}</span>\n                </b-col>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Xếp loại </label>\n                  <br />\n                  <el-select\n                    v-model=\"value\"\n                    placeholder=\"Select\"\n                    :class=\"main_3\"\n                  >\n                    <el-option\n                      v-for=\"item in options\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\"\n                    >\n                    </el-option>\n                  </el-select>\n                  <span :class=\"main_2\">{{ mark_sum }}</span>\n                </b-col>\n              </b-row>\n              <b-row>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Điểm ý thức </label>\n                  <br />\n                  <span class=\"information\">\n                    <b-form-rating\n                      v-model=\"studentObj.conductSummary.data[0].mark\"\n                      class=\"rating\"\n                      variant=\"warning\"\n                      readonly\n                    ></b-form-rating>\n                  </span>\n                </b-col>\n                <b-col lg=\"6\">\n                  <label class=\"form-control-label\"> Nhận xét</label>\n                  <br />\n                  <span class=\"information\"\n                    >{{ studentObj.conductSummary.data[0].comment }}\n                  </span>\n                </b-col>\n              </b-row>\n            </div>\n          </b-col>\n        </b-row>\n      </div>\n\n      <b-row\n        class=\"mt-5\"\n        v-for=\"(item, index) in achievements\"\n        :item=\"item\"\n        :index=\"index\"\n        :key=\"item.id\"\n        :id=\"'page' + item.id\"\n      >\n        <h2 class=\"mb-3\">\n          Bộ môn {{ item.subject_id }} - Trường {{ user.school }}\n        </h2>\n        <br />\n        <!-- <b-col xl=\"12\" class=\"mb-5 mb-xl-0\">\n          <card type=\"default\" header-classes=\"bg-transparent\">\n            <b-row align-v=\"center\" slot=\"header\">\n              <b-col>\n                <h6 class=\"text-light text-uppercase ls-1 mb-1\">\n                  Thành tích học tập\n                </h6>\n                <h5 class=\"h3 h5-old text-white mb-0\">Bảng điểm</h5>\n              </b-col>\n              <b-col>\n                <b-nav class=\"nav-pills justify-content-end\">\n                  <b-nav-item class=\"mr-2 mr-md-0\" link-classes=\"py-2 px-3\">\n                    <span class=\"d-none d-md-block\">Học kì</span>\n                    <span class=\"d-md-none\">M</span>\n                  </b-nav-item>\n                </b-nav>\n              </b-col>\n            </b-row>\n\n            <bar-chart\n              v-if=\"chart[index]\"\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"chart[index]\"\n            >\n            </bar-chart>\n          </card>\n          <LineChartNew :chart-data=\"linedata\" />\n        </b-col> -->\n        <b-col class=\"mb-5 mb-xl-0 mt-15\">\n          <b-card no-body>\n            <b-card-header class=\"border-0\">\n              <h3 class=\"mb-0\">Chi tiết bảng điểm</h3>\n            </b-card-header>\n            <!-- <el-table></el-table> -->\n\n            <el-table\n              class=\"table-responsive table\"\n              header-row-class-name=\"thead-light\"\n              :data=\"arrTest[index]\"\n            >\n              <!-- @selection-change=\"handleSelectionChangeInStudentTable\" -->\n              <el-table-column\n                fixed\n                label=\"Tên bài kiểm tra\"\n                min-width=\"200px\"\n                prop=\"test.testname\"\n              >\n              </el-table-column>\n\n              <el-table-column\n                label=\"Điểm\"\n                min-width=\"120px\"\n                prop=\"mark\"\n                align=\"center\"\n              >\n                <template v-slot=\"{ row }\">\n                  <badge class=\"badge-dot mr-4\" type=\"\" v-if=\"row.mark >= 7\">\n                    <span class=\"success\" :class=\"`text-success`\">{{\n                      row.mark\n                    }}</span>\n                  </badge>\n                  <badge\n                    class=\"badge-dot mr-4\"\n                    type=\"\"\n                    v-else-if=\"row.mark < 5\"\n                  >\n                    <span class=\"status\" :class=\"`text-warning`\">{{\n                      row.mark\n                    }}</span>\n                  </badge>\n                  <badge class=\"badge-dot mr-4\" type=\"\" v-else>\n                    <span class=\"status\" :class=\"`text-info`\">{{\n                      row.mark\n                    }}</span>\n                  </badge>\n                </template>\n              </el-table-column>\n              <el-table-column\n                label=\"Trọng số\"\n                prop=\"test.percentage\"\n                min-width=\"90px\"\n                align=\"center\"\n              >\n              </el-table-column>\n\n              <el-table-column\n                label=\"Ngày kiểm tra\"\n                min-width=\"150px\"\n                prop=\"test.date\"\n              >\n              </el-table-column>\n              <el-table-column\n                label=\"Nhận xét của GV\"\n                prop=\"comment\"\n                min-width=\"120px\"\n                align=\"center\"\n              >\n              </el-table-column>\n            </el-table>\n          </b-card>\n        </b-col>\n      </b-row>\n      <b-button pill variant=\"success\" :class=\"notBack\" @click=\"printPDF\">\n        <i class=\"fas fa-share-square\"></i> {{ download_status }}\n      </b-button>\n      <b-button pill variant=\"success\" :class=\"back\" @click=\"handleBack\">\n        <i class=\"fas fa-arrow-circle-left\"></i> Quay lại trang quản lí\n      </b-button>\n    </b-container>\n  </div>\n</template>\n<script>\n// import '~bootstrap-vue/dist/bootstrap-vue.css';\n// Charts\n// import * as chartConfigs from \"@/components/Charts/config\";\n// import LineChart from \"@/components/Charts/LineChart\";\n// import BarChart from \"@/components/Charts/BarChart\";\n// import LineChartNew from \"@/components/Charts/LineChartNew\";\n// Components\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\";\n\n// Tables\n// import SocialTrafficTable from './Dashboard/SocialTrafficTable';\n// import PageVisitsTable from './Dashboard/PageVisitsTable';\nimport { get } from \"../../../services/services\";\nimport { mapGetters } from \"vuex\";\nimport Exporter from \"vue-chartjs-exporter\";\n// import html2canvas from \"html2canvas\";\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  Tag,\n  RadioGroup,\n} from \"element-ui\";\nimport Vue from \"vue\";\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    LineChartNew,\n    BaseProgress,\n    StatsCard,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Tag.name]: Tag,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n\n  },\n  computed: {\n    ...mapGetters({\n      // map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n    main_1() {\n      return this.status ? \"mb-5 mb-xl-0 mt--5\" : \"mb-5 mb-xl-0\";\n    },\n    main_2() {\n      return this.status ? \"information none\" : \"information\";\n    },\n    main_3() {\n      return this.status ? \"\" : \"none\";\n    },\n    notBack() {\n      return this.status2 ? \"mt-4\" : \"mt-4 none\";\n    },\n    back() {\n      return this.status2 ? \"none\" : \"mt-4\";\n    },\n    print() {\n      return this.status ? \" mb-7 mb-xl-4 none\" : \"mb-7 mb-xl-4\";\n    },\n  },\n  data() {\n    return {\n      studentObj: {},\n      redBarChart: {\n        chartData: {},\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      mark_avg: 0,\n      mark_sum: \"\",\n      download_status: \"Tải xuống báo cáo \",\n      status: true,\n      status2: true,\n      arrTest: [],\n      arrStudent: [],\n      numClass: 0,\n      value: \"\",\n      achievements: [],\n      indexX: [],\n      indexY: [],\n      chart: [],\n      options: [\n        {\n          value: \"Giỏi\",\n          label: \"Giỏi\",\n        },\n        {\n          value: \"Khá\",\n          label: \"Khá\",\n        },\n        {\n          value: \"Trung bình\",\n          label: \"Trung bình\",\n        },\n        {\n          value: \"Yếu\",\n          label: \"Yếu\",\n        },\n      ],\n      linedata: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: \"Data One\",\n            borderColor: \"#FC2525\",\n            pointBackgroundColor: \"white\",\n            borderWidth: 1,\n            pointBorderColor: \"white\",\n            backgroundColor: this.gradient,\n            data: [40, 39, 10, 40, 39, 80, 40],\n          },\n          {\n            label: \"Data Two\",\n            borderColor: \"#05CBE1\",\n            pointBackgroundColor: \"white\",\n            pointBorderColor: \"white\",\n            borderWidth: 1,\n            backgroundColor: this.gradient2,\n            data: [60, 55, 32, 10, 2, 12, 53],\n          },\n        ],\n      },\n    };\n  },\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.validation();\n  },\n  watch: {\n    value(after, before) {\n      // this.getResults();\n      this.mark_sum = this.value;\n      console.log(this.mark_sum);\n    },\n    // value()\n    \"$route.params.student_id\": function (detail_id) {\n      this.validation();\n    },\n  },\n  methods: {\n    validation() {\n      // console.log(this.$route.params.student_id)\n      let student_id = this.$route.params.student_id;\n      let url = \"http://localhost:8000/api/teacher/student/\" + student_id;\n      get(url)\n        .then((res) => {\n          const keyClass = JSON.parse(localStorage.getItem(\"keyClass\"));\n          // console.log(keyClass[0].id)\n          if (keyClass[0].id === res.data.data.class_id) {\n            if(res.data.data.conductSummary.data.length != 0)\n            {this.fetchData();\n            console.log(\"length\",res.data.data.conductSummary.data.length)\n            this.studentObj = res.data.data;}\n            else{\n              this.$router.push(\"/teacher\");\n            this.showNotification(\"danger\", \"Bạn phải tổng kết điểm ý thức trước\");\n            }\n          } else {\n            this.$router.push(\"/teacher\");\n            this.showNotification(\"danger\", \"Bạn không có quyền truy cập\");\n          }\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    fetchData() {\n      let url =\n        \"http://localhost:8000/api/teacher/achievement/student/\" +\n        this.$route.params.student_id;\n      get(url)\n        .then((res) => {\n          // console.log(res);\n          this.achievements = res.data.data;\n          this.initColChart();\n          let sum = 0;\n          let count = 0;\n          this.achievements.forEach((element) => {\n            // console.log(element.id)\n            if (\n              element.subject_id == \"Toán\" ||\n              element.subject_id == \"Ngữ Văn\"\n            ) {\n              sum += element.mark.final_grade * 2;\n              count += 2;\n            } else {\n              sum += element.mark.final_grade;\n              count++;\n            }\n            var url =\n              \"http://localhost:8000/api/teacher/chart/student/\" +\n              this.$route.params.student_id +\n              \"/class_sub/\" +\n              element.class_sub;\n            this.arrStudent.push(url);\n          });\n          let avg = sum / count;\n          this.mark_avg = avg.toFixed(2)\n          // console.log(this.arrStudent);\n          this.getAPI().then((results) => {\n            console.log(this.indexX.length);\n            console.log(this.indexX);\n            const that = this;\n            // this.achievements.forEach((element,index) => {\n            //   let chartData = {\n            //     datasets: [\n            //       {\n            //         label: \"Điểm\",\n            //         data: that.indexX[0],\n            //       },\n            //     ],\n            //     labels: that.indexY[0]\n            //   };\n            //   console.log(that.indexX)\n            //   // this.chart.push(chartData)\n            //   // console.log(index)\n            // })\n            // // console.log(this.chart)\n          });\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    initColChart() {\n      let arr = this.achievements;\n      let x = [];\n      let y = [];\n      arr.forEach((element) => {\n        console.log(element.id);\n        x.push(element.subject_id);\n        if (element.mark.final_grade == null) {\n          y.push(0);\n        } else {\n          y.push(element.mark.final_grade);\n        }\n      });\n      let chartData = {\n        datasets: [\n          {\n            label: \"Điểm\",\n            data: y,\n          },\n        ],\n        labels: x,\n      };\n      this.redBarChart.chartData = chartData;\n    },\n    async getAPI() {\n      // let requests = this.arrStudent.map((url) => get(url));\n      // Promise.all(requests).then((responses) =>\n      //   responses.forEach((response) => {\n      //     this.arrTest.push(response.data.data);\n      //     let arr = response.data.data;\n      //     let x = [];\n      //     let y = [];\n      //     arr.forEach((element) => {\n      //       x.push(element.test.testname);\n      //       if (element.mark == null) {\n      //         y.push(0);\n      //       } else {\n      //         y.push(element.mark);\n      //       }\n      //     });\n      //     let chartData = {\n      //       datasets: [\n      //         {\n      //           label: \"Điểm\",\n      //           data: y,\n\n      //         },\n      //       ],\n      //       labels: x,\n      //     };\n      //     this.chart.push(chartData);\n      //   })\n      // );\n\n      // let requests = this.arrStudent.map((url) => get(url));\n      // Promise.all(requests).then((responses) =>\n      //   responses.forEach((response) => {\n      //     this.arrTest.push(response.data.data);\n      //     let arr = response.data.data;\n      //     let x = [];\n      //     let y = [];\n      //     let z = [];\n      //     arr.forEach((element) => {\n      //       x.push(element.test.testname);\n      //       if (element.mark == null) {\n      //         y.push(0);\n      //       } else {\n      //         y.push(element.mark);\n      //       }\n      //     });\n      //     let chartData = {\n      //       datasets: [\n      //         {\n      //           label: \"Điểm\",\n      //           data: y,\n      //         },\n      //       ],\n      //       labels: x,\n      //     };\n      //     this.chart.push(chartData);\n      //   })\n      // );\n\n      let requests = this.arrStudent.map((url) => get(url));\n      Promise.all(requests).then((responses) =>\n        responses.forEach((response) => {\n          this.arrTest.push(response.data.data);\n        })\n      );\n    },\n    printPDF() {\n      if (this.mark_sum == \"\") {\n          this.showNotification(\"danger\", \"Bạn chưa chọn học lực\");\n      } else {\n        const that = this;\n        let promise = new Promise(function (resolve, reject) {\n          // the function is executed automatically when the promise is constructed\n          that.status = false;\n          that.download_status = \"Đang tải xuống\";\n          // after 1 second signal that the job is done with the result \"done\"\n          setTimeout(() => resolve(\"done\"), 3000);\n        });\n        promise.then((responses) => {\n          // let name =\n          let header = document.getElementById(\"header\");\n          let componet = [];\n          componet.push(header);\n          this.achievements.forEach((element) => {\n            let name = \"page\" + element.id;\n            let el = document.getElementById(name);\n            componet.push(el);\n          });\n          console.log(componet)\n          let exp = new Exporter(componet);\n          // let namefile = that.studentObj.fullname\n          exp.export_pdf().then((pdf) => {\n            pdf.save(\"report.pdf\");\n            that.status = true;\n            // this.download_status = \"Tải xuống báo cáo \";\n            this.status2 = false\n            // that.$route.push(\"/teacher/class/\" + this.studentObj.class_id)\n          });\n        });\n      }\n      // this.status = false;\n\n      // this.status = true;\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleBack(){\n      this.$router.push(\"/teacher/class/\" + this.studentObj.class_id);\n    }\n  },\n  mounted() {},\n};\n</script>\n<style>\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n.h5-old {\n  font-size: 0.8125rem !important;\n}\n.information {\n  display: block;\n  width: 100%;\n  height: calc(1.5em + 1.25rem + 2px);\n  padding: 0.625rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #8898aa;\n  /* background-color: #f8f9fe; */\n  background-clip: padding-box;\n  font-style: italic;\n  /* border: 1px solid #cad1d7; */\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n.text-center {\n  text-align: center;\n}\n.hidden {\n  /* display: none; */\n  /* width: 1500px !important; */\n  /* height: 100px !important; */\n  top: 0 !important;\n  position: absolute !important;\n  /* right: 0; */\n  /* left: -1700px !important; */\n  /* opacity: 0; */\n}\n.realative {\n  position: relative;\n  /* opacity: 0; */\n}\n.left {\n  left: -1700px !important;\n}\n.none {\n  display: none;\n  /* opacity: 0; */\n}\n.rating {\n  border: none;\n  background-color: inherit;\n  font-size: 0.9rem;\n}\n.el-table .cell {\n  word-break: break-word;\n}\n</style>\n"]}]}