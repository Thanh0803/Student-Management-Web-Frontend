{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/admins/GradeManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/admins/GradeManagement.vue","mtime":1640685959114},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1638461225625},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\nimport projects from \"../Tables/projects\";\nimport { get, put,del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nimport Vuelidate from 'vuelidate';\nVue.use(Vuelidate);\nimport { mapGetters } from \"vuex\";\nVue.prototype.$confirm = MessageBox.confirm;\n\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      keyword: null,\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      student: [],\n      form: {\n        className: \"\",\n        schoolYear: \"\",\n        academicYear: \"\",\n        teacher_id: \"\",\n      },\n      classObj: {},\n      multipleSelection: [],\n      keyTeacherId: [],\n      options: [],\n      keyTeacherName: \"\",\n      rules: {\n          className: [\n            { required: true, message: 'Nhập đủ tên lớp', trigger: 'blur' },\n            // { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' }\n          ],\n          teacher_id : [\n            { required: true, message: 'Nhập đủ GVCN', trigger: 'change' }\n          ],\n          schoolYear: [\n            { required: true, message: 'Nhập đủ tên trường', trigger: 'blur' },\n            // { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' }\n          ],\n          academicYear : [\n            { required: true, message: 'Nhập đủ khối', trigger: 'change' }\n          ],\n  \n        }\n    };\n  },\n  created() {\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getClassData();\n      this.getKeyTeacher();\n      this.handleSubmitAdd();\n    },\n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  \n  methods: {\n    getClassData(currentPage) {\n      let url =\n        \"http://localhost:8000/api/admin/grade/\"+ this.$route.params.id +\"?page=\"+ this.currentPage ;\n      // console.log(\"URL\",url);\n      get(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.perPage = res.data.data.per_page;\n          this.totalPage = res.data.data.total;\n          this.posts = res.data.data;\n\n      \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleAdd(){\n        this.$refs[\"modalAdd\"].show();\n        this.getKeyTeacher();\n    },\n    handleAddClass(bvModalEvt){\n        bvModalEvt.preventDefault()\n        // Trigger submit handler\n        this.handleSubmitAdd()\n    },\n    handleSubmitAdd(){\n        this.$refs[\"form\"].validate((valid) => {\n          if (valid) {\n            let url = \"http://localhost:8000/api/admin/class/upload/\"+ this.$route.params.id;\n            let payload = this.form;\n            console.log(\"payload\",this.form)\n            post(url,payload)\n            .then((res) => {\n              console.log(\"Respon\", res);\n              this.showNotification(\"success\",\"Đã thêm thành công\")\n              this.getClassData(this.currentPage);\n              //   this.arrTeacher = res.data\n              //   console.log(this.arrTeacher.length)\n            //   this.getStudentData(this.currentPage);\n          \n        })\n        .catch((err) => {\n          // alert(err);\n          this.showNotification(\"danger\",err)\n        });\n            this.$nextTick(() => {\n          this.$bvModal.hide('modal-add')\n        })\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n        \n    },\n    getKeyTeacher() {\n      let url = \"http://localhost:8000/api/admin/teacher/getall/\";\n      get(url)\n        .then((res) => {\n          let keyFillter = []\n          // console.log(\"res\",res)\n          let arr = Object.keys(res.data.data).map((k) => res.data.data[k])\n          // console.log(\"After\",arr)\n          arr.forEach((element)=>{\n                if(this.keyTeacherId.includes(element.id)){\n                  // console.log(\"ko ddung\", element)\n                }\n                else{\n                  keyFillter.push(element)\n                  // console.log(\"ddung\", element)\n                }\n           })\n          //  console.log(keyFillter)\n          this.options = keyFillter;\n          //   console.log(this.options)\n          //   this.keyTeacher = res.data.User.data.fullname\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    resetModal() {\n        this.form.className = ''\n        this.form.schoolYear = ''\n        this.form.academicYear = ''\n        this.options = []\n        // this.form.key_teacher = null\n        this.form.teacher_id = null\n      },\n    handleSelectionChange(val) {\n      // this.currentRow = val;\n      this.multipleSelection = val;\n      if(this.multipleSelection.length >1){\n\n      }\n        // console.log(\"Selection\",this.multipleSelection)\n    },\n    handleDetail(index, row) {\n    this.$router.push('/admin/grade/class/'+row.id)\n      },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getClassById() {\n      let url = \"http://localhost:8000/api/admin/grade/\" + this.$route.params.id;\n      let json = await get(url);\n      return json;\n    },\n    async handleDelete(index, row) {\n      this.dialogDelete = true\n      const res = await this.getClassById(row.id);\n      this.classObj = row;\n    },\n    confirmDelete(){\n      let url = \"http://localhost:8000/api/admin/class/delete/\" + this.classObj.id\n      del(url)\n        .then((res) => {\n          console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getClassData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getClassData(currentPage);\n      },\n};\n",{"version":3,"sources":["GradeManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"GradeManagement.vue","sourceRoot":"src/views/admins","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n    </base-header>\n\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n        <b-col>\n          <b-card no-body>\n            <b-card-header class=\"border-0\">\n              <h3 class=\"mb-0\">Class List</h3>\n            </b-card-header>\n            <el-button \n              size=\"mini\"\n              type=\"success\"\n              @click=\"handleAdd()\"\n              class=\"import-button\">\n              Add Class List</el-button>\n\n            <el-table\n              class=\"table-responsive table\"\n              header-row-class-name=\"thead-light\"\n              :data=\"posts\"\n              @selection-change=\"handleSelectionChange\"\n            >\n              <el-table-column type=\"selection\" min-width=\"55px\">\n              </el-table-column>\n\n              <el-table-column\n                label=\"ClassName\"\n                min-width=\"150px\"\n                prop=\"className\"\n              >\n              </el-table-column>\n              <el-table-column\n                label=\"HeadTeacher\"\n                prop=\"headTeacher\"\n                min-width=\"140px\"\n              >\n              </el-table-column>\n              <el-table-column\n                label=\"SchoolYear\"\n                prop=\"schoolYear\"\n                min-width=\"140px\"\n              >\n              </el-table-column>\n  \n              <el-table-column label=\"Action\" min-width=\"290px\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDetail(scope.$index, scope.row)\"\n                    >Student List</el-button\n                  >\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDelete(scope.$index, scope.row)\"\n                    >Delete</el-button\n                  >\n                </template>\n              </el-table-column>\n\n            </el-table>\n\n            <b-card-footer class=\"py-4 d-flex justify-content-end position-relative\">\n              <!-- <base-pagination v-model=\"currentPage\" :per-page=\"20\" :total=\"50\" :@input=\"getTeacherData(currentPage)\"></base-pagination> -->\n              <el-row class=\"position-absolute\" v-if=\"multipleSelection.length > 1\">\n                <el-button type=\"danger\" @click=\"dialogMultiDelete=true\">Xoá các lựa chọn</el-button>\n              </el-row>\n              <b-pagination\n                :total-rows=\"totalPage\"\n                v-model=\"currentPage\"\n                :per-page=\"perPage\"\n                @input=\"getClassData(currentPage)\"\n              >\n              <template v-slot:prev-text>\n                  <a class=\"page-link\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n                <template v-slot:next-text>\n                  <a class=\"page-link\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n              </b-pagination>\n            </b-card-footer>\n          </b-card>\n        </b-col>\n      </b-row>\n      <div>\n        <el-dialog\n        title=\"Warning\"\n        :visible.sync=\"dialogDelete\"\n        width=\"30%\"\n        center\n      >\n        <h3 class=\"text-center\"\n          >Bạn có muốn Xoá lớp này </h3>\n          <h4 class=\"text-center red\" >(Toàn bộ học sinh trong lớp sẽ bị xoá)</h4>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmDelete\">Confirm</el-button>\n          <el-button  @click=\"dialogDelete = false\"\n            >Cancle</el-button\n          >\n        </span>\n        </el-dialog>\n        <b-modal ref=\"modalAdd\" size=\"xl\" title=\"Thêm lớp học\"\n        id=\"modal-add\"\n        @show=\"resetModal\"\n        @hidden=\"resetModal\"\n        @ok=\"handleAddClass\">\n          <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\" @submit.stop.prevent=\"handleSubmitAdd\">\n            <b-container class=\"bv-example-row\">\n              <b-row>\n                <b-col>\n                  <el-form-item label=\"ClassName\" prop=\"className\">\n                    <el-input\n                      v-model=\"form.className\"\n                    ></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"HeadTeacher\" prop=\"headTeacher\">\n                    <el-select\n                      v-model=\"form.teacher_id\"\n                      clearable\n                      filterable\n                      \n                    >\n                      <el-option\n                        v-for=\"item in options\"\n                        :key=\"item.id\"\n                        :label=\"item.fullname\"\n                        :value=\"item.id\"\n                      >\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                </b-col>\n                <b-col>\n                  <el-form-item label=\"SchoolYear\" prop=\"schoolYear\">\n                    <el-input\n                      v-model=\"form.schoolYear\"\n                      \n                    ></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"AcademicYear\" prop=\"academicYear\">\n                    <el-input\n                      v-model=\"form.academicYear\"\n                      \n                    ></el-input>\n                  </el-form-item>\n                </b-col>\n              </b-row>\n            </b-container>\n          </el-form>\n        </b-modal>\n\n      </div>\n    </b-container>\n  </div>\n</template>\n<script>\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\nimport projects from \"../Tables/projects\";\nimport { get, put,del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nimport Vuelidate from 'vuelidate';\nVue.use(Vuelidate);\nimport { mapGetters } from \"vuex\";\nVue.prototype.$confirm = MessageBox.confirm;\n\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      keyword: null,\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      student: [],\n      form: {\n        className: \"\",\n        schoolYear: \"\",\n        academicYear: \"\",\n        teacher_id: \"\",\n      },\n      classObj: {},\n      multipleSelection: [],\n      keyTeacherId: [],\n      options: [],\n      keyTeacherName: \"\",\n      rules: {\n          className: [\n            { required: true, message: 'Nhập đủ tên lớp', trigger: 'blur' },\n            // { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' }\n          ],\n          teacher_id : [\n            { required: true, message: 'Nhập đủ GVCN', trigger: 'change' }\n          ],\n          schoolYear: [\n            { required: true, message: 'Nhập đủ tên trường', trigger: 'blur' },\n            // { min: 3, max: 5, message: 'Length should be 3 to 5', trigger: 'blur' }\n          ],\n          academicYear : [\n            { required: true, message: 'Nhập đủ khối', trigger: 'change' }\n          ],\n  \n        }\n    };\n  },\n  created() {\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getClassData();\n      this.getKeyTeacher();\n      this.handleSubmitAdd();\n    },\n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  \n  methods: {\n    getClassData(currentPage) {\n      let url =\n        \"http://localhost:8000/api/admin/grade/\"+ this.$route.params.id +\"?page=\"+ this.currentPage ;\n      // console.log(\"URL\",url);\n      get(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.perPage = res.data.data.per_page;\n          this.totalPage = res.data.data.total;\n          this.posts = res.data.data;\n\n      \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    showNotification(type, message) {\n      this.$notify({\n        message: message,\n        icon: \"add_alert\",\n        horizontalAlign: \"right\",\n        verticalAlign: \"top\",\n        type: type,\n      });\n    },\n    handleAdd(){\n        this.$refs[\"modalAdd\"].show();\n        this.getKeyTeacher();\n    },\n    handleAddClass(bvModalEvt){\n        bvModalEvt.preventDefault()\n        // Trigger submit handler\n        this.handleSubmitAdd()\n    },\n    handleSubmitAdd(){\n        this.$refs[\"form\"].validate((valid) => {\n          if (valid) {\n            let url = \"http://localhost:8000/api/admin/class/upload/\"+ this.$route.params.id;\n            let payload = this.form;\n            console.log(\"payload\",this.form)\n            post(url,payload)\n            .then((res) => {\n              console.log(\"Respon\", res);\n              this.showNotification(\"success\",\"Đã thêm thành công\")\n              this.getClassData(this.currentPage);\n              //   this.arrTeacher = res.data\n              //   console.log(this.arrTeacher.length)\n            //   this.getStudentData(this.currentPage);\n          \n        })\n        .catch((err) => {\n          // alert(err);\n          this.showNotification(\"danger\",err)\n        });\n            this.$nextTick(() => {\n          this.$bvModal.hide('modal-add')\n        })\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n        \n    },\n    getKeyTeacher() {\n      let url = \"http://localhost:8000/api/admin/teacher/getall/\";\n      get(url)\n        .then((res) => {\n          let keyFillter = []\n          // console.log(\"res\",res)\n          let arr = Object.keys(res.data.data).map((k) => res.data.data[k])\n          // console.log(\"After\",arr)\n          arr.forEach((element)=>{\n                if(this.keyTeacherId.includes(element.id)){\n                  // console.log(\"ko ddung\", element)\n                }\n                else{\n                  keyFillter.push(element)\n                  // console.log(\"ddung\", element)\n                }\n           })\n          //  console.log(keyFillter)\n          this.options = keyFillter;\n          //   console.log(this.options)\n          //   this.keyTeacher = res.data.User.data.fullname\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    resetModal() {\n        this.form.className = ''\n        this.form.schoolYear = ''\n        this.form.academicYear = ''\n        this.options = []\n        // this.form.key_teacher = null\n        this.form.teacher_id = null\n      },\n    handleSelectionChange(val) {\n      // this.currentRow = val;\n      this.multipleSelection = val;\n      if(this.multipleSelection.length >1){\n\n      }\n        // console.log(\"Selection\",this.multipleSelection)\n    },\n    handleDetail(index, row) {\n    this.$router.push('/admin/grade/class/'+row.id)\n      },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getClassById() {\n      let url = \"http://localhost:8000/api/admin/grade/\" + this.$route.params.id;\n      let json = await get(url);\n      return json;\n    },\n    async handleDelete(index, row) {\n      this.dialogDelete = true\n      const res = await this.getClassById(row.id);\n      this.classObj = row;\n    },\n    confirmDelete(){\n      let url = \"http://localhost:8000/api/admin/class/delete/\" + this.classObj.id\n      del(url)\n        .then((res) => {\n          console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getClassData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getClassData(currentPage);\n      },\n};\n</script>\n<style>\n.el-table.table-dark {\n  background-color: #172b4d;\n  color: #f8f9fe;\n}\n\n.el-table.table-dark th,\n.el-table.table-dark tr {\n  background-color: #172b4d;\n}\n\n.el-table.table-dark td,\n.el-table.table-dark th.is-leaf {\n  border-bottom: none;\n}\n.el-table .cell,\n.el-table th div {\n  overflow: inherit !important;\n}\n.el-table th > .cell {\n  width: auto;\n}\n.position-relative{\n  position: relative;\n}\n.position-absolute{\n  position: absolute;\n  left: 10%;\n}\n</style>\n"]}]}