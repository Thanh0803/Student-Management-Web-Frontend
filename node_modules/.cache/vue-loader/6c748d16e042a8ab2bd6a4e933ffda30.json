{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Student/Secure.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/Pages/Student/Secure.vue","mtime":1644435764251},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/css-loader/index.js","mtime":1638461276791},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1638461277198},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/postcss-loader/src/index.js","mtime":1638351067722},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n.h5-old {\n  font-size: 0.8125rem !important;\n}\n.information {\n  display: block;\n  width: 100%;\n  height: calc(1.5em + 1.25rem + 2px);\n  padding: 0.625rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #8898aa;\n  background-color: #f8f9fe;\n  background-clip: padding-box;\n  font-style: italic;\n  /* border: 1px solid #cad1d7; */\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n",{"version":3,"sources":["Secure.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Secure.vue","sourceRoot":"src/views/Pages/Student","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <h1> Welcome Phan Ngoc Thao!</h1>\n      \n    </base-header>\n\n    <!--Charts-->\n\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n  \n        <b-col xl=\"5\" class=\"mt-8\">\n          <div class=\"pl-lg-4\">\n            <h6 class=\"heading-small text-muted mb-4\">Student's Inofrmation</h6>\n            <b-row>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Fullname</label>\n                <br />\n                <span class=\"information\">{{ user.fullname }}</span>\n              </b-col>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Email </label>\n                <br />\n                <span class=\"information\">{{ user.email }}</span>\n              </b-col>\n            </b-row>\n            <b-row>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Gender </label>\n                <br />\n                <span class=\"information\">{{ user.gender }}</span>\n              </b-col>\n              <b-col lg=\"6\">\n                <label class=\"form-control-label\"> Telephone </label>\n                <br />\n                <span class=\"information\">{{ user.phone }}</span>\n              </b-col>\n            </b-row>\n          </div>\n        </b-col>\n      </b-row>\n      <b-row\n        class=\"mt-5\"\n        v-for=\"(item, index) in achievements\"\n        :item=\"item\"\n        :index=\"index\"\n        :key=\"item.id\"\n      >\n        <h2 class=\"mb-3\">Bộ môn - {{ item.subject_id }}</h2>\n        <b-col xl=\"12\" class=\"mb-5 mb-xl-0\">\n          <card type=\"default\" header-classes=\"bg-transparent\">\n            <b-row align-v=\"center\" slot=\"header\">\n              <b-col>\n                <h6 class=\"text-light text-uppercase ls-1 mb-1\">\n                  Thành tích học tập\n                </h6>\n                <h5 class=\"h3 h5-old text-white mb-0\">Bảng điểm</h5>\n              </b-col>\n              <b-col>\n                <b-nav class=\"nav-pills justify-content-end\">\n                  <b-nav-item\n                    class=\"mr-2 mr-md-0\"\n                    :active=\"bigLineChart.activeIndex === 0\"\n                    link-classes=\"py-2 px-3\"\n                    @click.prevent=\"initBigChart(0)\"\n                  >\n                    <span class=\"d-none d-md-block\">Học kì</span>\n                    <span class=\"d-md-none\">M</span>\n                  </b-nav-item>\n                </b-nav>\n              </b-col>\n            </b-row>\n            <!-- <bar-chart\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"chart[index]\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            \n            </bar-chart> -->\n            <bar-chart\n              :height=\"350\"\n              ref=\"barChart\"\n              :chart-data=\"chart[index]\"\n            >\n            </bar-chart>\n          </card>\n        </b-col>\n      </b-row>\n\n    </b-container>\n  </div>\n</template>\n<script>\n// import '~bootstrap-vue/dist/bootstrap-vue.css';\n// Charts\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\n\n// Components\nimport BaseProgress from \"@/components/BaseProgress\";\nimport StatsCard from \"@/components/Cards/StatsCard\";\n\n// Tables\n// import SocialTrafficTable from './Dashboard/SocialTrafficTable';\n// import PageVisitsTable from './Dashboard/PageVisitsTable';\nimport { get } from \"../../../services/services\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    BaseProgress,\n    StatsCard,\n    // PageVisitsTable,\n    // SocialTrafficTable\n  },\n  computed: {\n    ...mapGetters({\n      // map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [\n          [10, 20, 10, 30, 15, 40, 20, 60, 60],\n          [0, 20, 5, 25, 10, 30, 15, 40, 40],\n        ],\n        activeIndex: 0,\n        chartData: {\n          datasets: [\n            {\n              label: \"Performance\",\n              data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\n            },\n          ],\n          labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        },\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      redBarChart: {\n        chartData: {},\n        extraOptions: chartConfigs.blueChartOptions,\n      },\n      arrTeacher: [],\n      arrStudent: [],\n      numClass: 0,\n      achievements: [],\n      indexX: [],\n      indexY: [],\n      chart:[]\n    };\n  },\n  created() {\n    // fetch the data when the view is created and the data is\n    // already being observed\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      let url =\n        \"http://localhost:8000/api/student/achievement/\" +\n        this.$store.state.user.id;\n      get(url)\n        .then((res) => {\n          console.log(res);\n          this.achievements = res.data.data;\n          this.initColChart();\n          this.achievements.forEach((element) => {\n            // console.log(element.id)\n            var url =\n              \"http://localhost:8000/api/student/chart/student/\" +\n              this.$store.state.user.id +\n              \"/class_sub/\" +\n              element.class_sub;\n            this.arrStudent.push(url);\n          });\n          // console.log(this.arrStudent);\n          this.getAPI().then(results => {\n            console.log(this.indexX.length)\n            console.log(this.indexX)\n            const that = this\n            // this.achievements.forEach((element,index) => {\n            //   let chartData = {\n            //     datasets: [\n            //       {\n            //         label: \"Điểm\",\n            //         data: that.indexX[0],\n            //       },\n            //     ],\n            //     labels: that.indexY[0]\n            //   };\n            //   console.log(that.indexX)\n            //   // this.chart.push(chartData)\n            //   // console.log(index)\n            // })\n            // // console.log(this.chart)\n          }\n          );\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    initBigChart(index) {\n      // console.log(\"Achi\", this.achievements);\n      let chartData = {\n        datasets: [\n          {\n            label: \"Performance\",\n            data: this.bigLineChart.allData[index],\n          },\n        ],\n        labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      };\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = 0;\n    },\n    initColChart() {\n      let arr = this.achievements;\n      let x = [];\n      let y = [];\n      arr.forEach((element) => {\n        // console.log(element.id)\n        x.push(element.subject_id);\n        if (element.mark.final_grade == null) {\n          y.push(0);\n        } else {\n          y.push(element.mark.final_grade);\n        }\n      });\n      let chartData = {\n        datasets: [\n          {\n            label: \"Performance\",\n            data: y,\n          },\n        ],\n        labels: x,\n      };\n      this.redBarChart.chartData = chartData;\n    },\n    initDataStudentSubject(class_sub) {\n      let student_id = this.$store.state.user.id;\n      let classSubject_id = class_sub;\n      let url =\n        \"http://localhost:8000/api/student/chart/student/\" +\n        student_id +\n        \"/class_sub/\" +\n        classSubject_id;\n      get(url)\n        .then((res) => {\n          console.log(\"Chate\", res);\n          //     let arr = res.data.data;\n          //     let x = [];\n          //     let y = []\n          //     arr.forEach((element) => {\n\n          //       // console.log(element.id)\n          //       x.push(element.test.testname)\n          //       if(element.mark == null) {y.push(0)}\n          //       else{\n          //       y.push(element.mark);\n          //       }\n          // });\n          //     let chartData = {\n          //       datasets: [\n          //         {\n          //           label: \"Điểm\",\n          //           data: y,\n          //         },\n          //       ],\n          //       labels:\n          //       x ,\n          //     };\n          //     this.bigLineChart.chartData = chartData;\n          //     this.bigLineChart.activeIndex = index;\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    async getAPI() {\n      let requests = this.arrStudent.map((url) => get(url));\n      // let indexX = [];\n      // let indexY = [];\n      // Promise.all waits until all jobs are resolved\n      Promise.all(requests).then((responses) =>\n        responses.forEach((response) => {\n          let arr = response.data.data;\n          let x = [];\n          let y = [];\n          arr.forEach((element) => {\n            // console.log(element.id)\n            x.push(element.test.testname);\n            if (element.mark == null) {\n              y.push(0);\n            } else {\n              y.push(element.mark);\n            }\n          });\n          let chartData = {\n            datasets: [\n              {\n                label: \"Điểm\",\n                data: y,\n              },\n            ],\n            labels: \n            x ,\n          };\n          // indexX.push(x);\n          this.chart.push(chartData)\n          // this.indexY.push(y)\n          // // indexY.push(y);\n          // console.log(\"X\",this.indexX[0])\n        })\n      );\n      // console.log(\"X\",this.indexX[0])\n      // console.log(\"Y\",indexY)\n      // this.indexX = indexX;\n      // this.indexY = indexY;\n    },\n  },\n  mounted() {\n    this.initBigChart(0);\n    // this.initDataTeacher();\n    // this.initDataStudent();\n    // this.initDataClass();\n  },\n};\n</script>\n<style>\n.el-table .cell {\n  padding-left: 0px;\n  padding-right: 0px;\n}\n.h5-old {\n  font-size: 0.8125rem !important;\n}\n.information {\n  display: block;\n  width: 100%;\n  height: calc(1.5em + 1.25rem + 2px);\n  padding: 0.625rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #8898aa;\n  background-color: #f8f9fe;\n  background-clip: padding-box;\n  font-style: italic;\n  /* border: 1px solid #cad1d7; */\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  -webkit-transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n</style>\n"]}]}