{"remainingRequest":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thanh/DOAN/vue-admin-frontend/src/views/admins/TeacherManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thanh/DOAN/vue-admin-frontend/src/views/admins/TeacherManagement.vue","mtime":1642605889127},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/babel-loader/lib/index.js","mtime":1638461225625},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1638461276469},{"path":"/home/thanh/DOAN/vue-admin-frontend/node_modules/vue-loader/lib/index.js","mtime":1638461277198}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\n//   import projects from '../Tables/projects'\nimport projects from \"../Tables/projects\";\nimport users from \"../Tables/users\";\nimport { mapGetters } from \"vuex\";\nimport { get, put, del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nVue.prototype.$confirm = MessageBox.confirm;\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      dialogUpdateLevel: false,\n      dialogAddLevel: false,\n      teacher: [],\n      levelTeacher: [],\n      text: '',\n      searchText: '',\n      form: {\n        username: \"\",\n        fullname: \"\",\n        email: \"\",\n        phone: \"\",\n        gender: \"\",\n        level: \"\",\n      },\n      formLevel: {\n        level: \"\",\n        subject: [],\n        canBeKeyTeacher: \"\",\n        grade: 0,\n      },\n      labelPosition: \"left\",\n      teacherObj: {},\n      levelObj: {},\n      multipleSelection: [],\n    };\n  },\n  created() {\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getTeacherData();\n      this.handleImport();\n    },    \n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  methods: {\n    getTeacherData(currentPage) {\n       if (this.searchText.length == 4){\n        this.text = this.searchText\n      }else{\n        this.text = '2020'\n      }\n      let url = \"http://localhost:8000/api/admin/teacher/subject/getall/\"+this.$route.params.id+\"?page=\" + this.currentPage;\n      // console.log(\"URL\",url)\n      get(url)\n        .then((res) => {\n          this.perPage = res.data.meta.per_page;\n          this.totalPage = res.data.meta.total;\n          this.posts = res.data.data;\n          // console.log(\"XXX\",this.posts)\n\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    handleCurrentChange(val) {\n      // this.currentRow = val;\n    },\n    handleDetail(index, row) {\n      // console.log(index, row);\n      this.dialogVisible = true;\n      let url = \"http://localhost:8000/api/admin/teacher/\" + row.id;\n      get(url)\n        .then((res) => {\n          var user = res.data.data;\n          // this.teacher = Object.entries(user).map((e) => ( { [e[0]]: e[1] } ))\n          var result = Object.keys(user).map((key) => (\n            {         \n            key: key,\n            name: user[key],\n          }\n          ));\n          var temp = result.slice();\n          temp.pop();\n          var removed = temp.splice(1,1)\n          this.teacher = temp;\n          \n          var level = result[result.length - 1].name;\n          if (level !== null) {\n            result = Object.keys(level).map((key) => ({\n              key: key,\n              name: level[key],\n            }));\n            result.shift();\n            result.pop();\n            // result[0].key = \"Trình độ\";\n            // result[1].key = \"Môn học\";\n            // result[2].key = \"Chủ Nhiệm\";\n            // result.pop();\n            // result.pop();\n            this.levelTeacher = result;\n          } else {\n            this.levelTeacher = null;\n          }\n          // console.log(\"Level\",level)\n        })\n        .catch((err) => {\n          alert(err);\n        });\n\n      // var arr = Object.keys(user).map((key) => [Number(key), user[key]]);\n      // console.log(\"arr\", arr);align=\"center\"\n    },\n    handleImport(){\n      this.$router.push(\"/admin/teacher/upload/\"+this.$route.params.id);\n    },\n    async handleEdit(index, row) {\n      this.dialogEdit = true;\n      const res = await this.getTeacherById(row.id);\n      const user = res.data;\n      // console.log(\"user\", user);\n      this.teacherObj = user.data;\n      this.form.gender = user.data.gender;\n  \n    },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getTeacherById(id) {\n      let url = \"http://localhost:8000/api/admin/teacher/\" + id;\n      console.log(\"url\", url)\n      let json = await get(url);\n      return json;\n    },\n    onSubmitEdit() {\n      // console.log(\"Form\",this.form);\n      let url = \"http://localhost:8000/api/admin/teacher/update/\" + this.teacherObj.id;\n      let payload = this.form;\n      console.log(\"payload teacher\", payload)\n      put(url, payload)\n        .then((res) => {\n\n          this.dialogEdit = false;\n          this.getTeacherData(this.currentPage);\n  \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    async handleDelete(index, row) {\n\n      this.dialogDelete = true;\n      const res = await this.getTeacherById(row.id);\n      const user = res.data;\n      this.levelObj = row;\n      this.teacherObj = user.data;\n    },\n    confirmDelete() {\n      let url = \"http://localhost:8000/api/admin/teacher/\" + this.levelObj.id;\n      del(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getTeacherData(this.currentPage);\n          \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    handleSelectionChange(val) {\n      // this.currentRow = val;\n      this.multipleSelection = val;\n      if (this.multipleSelection.length > 1) {\n      }\n    },\n    confirmMultiDelete() {\n      let url = \"http://localhost:8000/api/teacher/delete\";\n      let payload = {\n        ids: \"\",\n      };\n      this.multipleSelection.forEach(function (item, index, array) {\n        // console.log(item, index);\n        if (index == 0) payload.ids = item.id;\n        else {\n          payload.ids = payload.ids + \",\" + item.id;\n        }\n        // payload.ids\n      });\n\n      post(url, payload)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogMultiDelete = false;\n          // this.getStudentData(this.currentPage);\n          //   this.arrTeacher = res.data\n          //   console.log(this.arrTeacher.length)\n          this.getTeacherData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n   \n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // alert(valid);\n          let url =\n            \"http://localhost:8000/api/addLevelTecher/\" + this.teacherObj.id;\n          let payload = {\n            level: \"\",\n            subject: \"\",\n            grade: \"\",\n            canBeKeyTeacher: \"\",\n          };\n          payload.level = this.formLevel.level;\n          payload.canBeKeyTeacher = this.formLevel.canBeKeyTeacher;\n          this.formLevel.subject.forEach(function (item, index, array) {\n            // console.log(item, index);\n            if (index == 0) payload.subject = item;\n            else {\n              payload.subject = payload.subject + \",\" + item;\n            }\n            // payload.ids\n          });\n          // console.log\n          put(url, payload)\n            .then((res) => {\n              // console.log(\"Respon\", res);\n              this.dialogAddLevel = false;\n              this.getTeacherData(this.currentPage);\n              this.$refs[formName].resetFields();\n              //   this.arrTeacher = res.data\n              //   console.log(this.arrTeacher.length)\n            })\n            .catch((err) => {\n              alert(err);\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    handleCloseAddForm(formName) {\n      this.dialogAddLevel = false;\n      this.$refs[formName].resetFields();\n    },\n   \n    handleCloseSubmitForm(formName) {\n      this.dialogUpdateLevel = false;\n      this.$refs[formName].resetFields();\n    },\n    submitEditLevelForm(formName) {\n      let url =\n        \"http://localhost:8000/api/updateLevelTecher/\" + this.teacherObj.id;\n      let payload = {\n        level: \"\",\n        subject: \"\",\n        // grade: \"8\",\n        canBeKeyTeacher: \"\",\n      };\n      payload.level = this.formLevel.level;\n      payload.canBeKeyTeacher = this.formLevel.canBeKeyTeacher;\n      this.formLevel.subject.forEach(function (item, index, array) {\n        // console.log(item, index);\n        if (index == 0) payload.subject = item;\n        else {\n          payload.subject = payload.subject + \",\" + item;\n        }\n        // payload.ids\n      });\n      // console.log\n      put(url, payload)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogUpdateLevel = false;\n          this.getTeacherData(this.currentPage);\n          this.$refs[formName].resetFields();\n          //   this.arrTeacher = res.data\n          //   console.log(this.arrTeacher.length)\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getTeacherData(currentPage);\n  },\n};\n",{"version":3,"sources":["TeacherManagement.vue"],"names":[],"mappingsfile":"TeacherManagement.vue","sourceRoot":"src/views/admins","sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n    </base-header>\n\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n        <b-col>\n          <b-card no-body>\n            <div class=\"row justify-content-center\">\n                <div class=\"card\">\n                    <input \n                      type=\"text\" \n                      v-model=\"searchText\" \n                      @keyup=\"getTeacherData()\"\n                      placeholder=\"Enter School Year\">\n                </div>\n            </div>\n            <b-card-header class=\"border-0\">\n              <h3 class=\"mb-0\">Teacher List</h3>\n            </b-card-header>\n            <div class=\"right\" >\n            <el-button \n              size=\"mini\"\n              type=\"success\"\n              @click=\"handleImport\"\n              class=\"add-button\">\n              Add Teacher List</el-button>\n            </div>\n\n            <el-table\n              class=\"table-responsive table\"\n              header-row-class-name=\"thead-light\"\n              :data=\"posts\"\n              @selection-change=\"handleSelectionChange\"\n            >\n              <el-table-column type=\"selection\" min-width=\"100px\">\n              </el-table-column>\n\n              <el-table-column\n                align=\"center\"\n                label=\" Fullname\"\n                min-width=\"150px\"\n                prop=\"teacher.fullname\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                label=\"Telephone Number\"\n                prop=\"teacher.phone\"\n                min-width=\"140px\"\n              >\n              </el-table-column>\n              <el-table-column\n                align=\"center\"\n                label=\"ClassName\"\n                min-width=\"110px\"\n                prop=\"lop.className\"\n              >    \n              </el-table-column>\n              <el-table-column label=\"Action\" min-width=\"290px\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDetail(scope.$index, scope.row)\"\n                    >Detail</el-button\n                  >\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleEdit(scope.$index, scope.row)\"\n                    >Edit</el-button\n                  >\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDelete(scope.$index, scope.row)\"\n                    >Delete</el-button\n                  >\n                </template>\n              </el-table-column>\n\n            </el-table>\n            <b-card-footer class=\"py-4 d-flex justify-content-end\">\n              <!-- <base-pagination v-model=\"currentPage\" :per-page=\"20\" :total=\"50\" :@input=\"getTeacherData(currentPage)\"></base-pagination> -->\n              <el-row\n                class=\"position-absolute left-10\"\n                v-if=\"multipleSelection.length > 1\"\n              >\n                <el-button type=\"danger\" @click=\"dialogMultiDelete = true\"\n                  >Xoá các lựa chọn</el-button\n                >\n              </el-row>\n              <b-pagination\n                :total-rows=\"totalPage\"\n                v-model=\"currentPage\"\n                :per-page=\"perPage\"\n                @input=\"getTeacherData(currentPage)\"\n              >\n                <template v-slot:prev-text>\n                  <a class=\"page-link\" aria-label=\"Previous\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n                <template v-slot:next-text>\n                  <a class=\"page-link\" aria-label=\"Next\">\n                    <span aria-hidden=\"true\"\n                      ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i\n                    ></span>\n                  </a>\n                </template>\n              </b-pagination>\n            </b-card-footer>\n          </b-card>\n        </b-col>\n      </b-row>\n      <!-- <div class=\"mt-5\"></div>\n      <dark-table></dark-table> -->\n      <el-dialog\n        title=\"Thông tin chi tiết giáo viên\"\n        :visible.sync=\"dialogVisible\"\n        width=\"70%\"\n      >\n        <!-- <span>This is a message</span> -->\n        <el-row :gutter=\"20\">\n          <el-col :span=\"8\"\n            ><div class=\"grid-content\">\n              <div>\n                <b-img\n                  src=\"https://anhdep123.com/wp-content/uploads/2021/05/hinh-avatar-trang.jpg\"\n                  fluid\n                  alt=\"Responsive image\"\n                ></b-img>\n              </div>\n            </div>\n          </el-col>\n          <el-col :span=\"16\"\n            ><div class=\"grid-content\">\n              <h3 class=\"mb-0\">Thông tin cơ bản</h3>\n              <br />\n              <el-table :data=\"teacher\" style=\"width: 100%\" border>\n                <el-table-column prop=\"key\" label=\"Thông tin\">\n                </el-table-column>\n                <el-table-column prop=\"name\" label=\"Nội dung\">\n                </el-table-column>\n              </el-table></div\n          ></el-col>\n        </el-row>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"dialogVisible = false\"\n            >Confirm</el-button\n          >\n        </span>\n      </el-dialog>\n      <el-dialog\n        title=\"Chỉnh sửa thông tin giáo viên\"\n        :visible.sync=\"dialogEdit\"\n        :before-close=\"handleClose\"\n        width=\"70%\"\n      >\n        <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"Fullname\">\n            <el-input\n              v-model=\"form.fullname\"\n              :placeholder=\"teacherObj.fullname\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"Username\">\n            <el-input\n              v-model=\"form.username\"\n              :placeholder=\"teacherObj.username\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"Telephone\">\n            <el-input\n              v-model=\"form.phone\"\n              :placeholder=\"teacherObj.phone\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"Email\">\n            <el-input\n              v-model=\"form.email\"\n              :placeholder=\"teacherObj.email\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"Level\">\n            <el-input\n              v-model=\"form.level\"\n              :placeholder=\"teacherObj.level\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"Gender\">\n            <el-radio-group v-model=\"form.gender\">\n              <el-radio label=\"Female\"></el-radio>\n              <el-radio label=\"Male\"></el-radio>\n            </el-radio-group>\n          </el-form-item>\n          \n          <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmitEdit\">Update</el-button>\n            <el-button @click=\"dialogEdit = false\">Cancel</el-button>\n          </el-form-item>\n        </el-form>\n      </el-dialog>\n      <el-dialog\n        title=\"Warning\"\n        :visible.sync=\"dialogDelete\"\n        width=\"30%\"\n        center\n      >\n        <span>Bạn có muốn xoá người này</span>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmDelete\">Confirm</el-button>\n          <el-button @click=\"dialogDelete = false\">Cancle</el-button>\n        </span>\n      </el-dialog>\n      <el-dialog\n        title=\"Warning\"\n        :visible.sync=\"dialogMultiDelete\"\n        width=\"30%\"\n        center\n      >\n        <span>Bạn có muốn xoá những người này</span>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmMultiDelete\"\n            >Confirm</el-button\n          >\n          <el-button @click=\"dialogMultiDelete = false\">Cancle</el-button>\n        </span>\n      </el-dialog>\n    </b-container>\n  </div>\n</template>\n<script>\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n  Button,\n  Dialog,\n  MessageBox,\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  TimePicker,\n  DatePicker,\n  CheckboxButton,\n  Checkbox,\n  CheckboxGroup,\n  Switch,\n  Radio,\n  RadioGroup,\n} from \"element-ui\";\n//   import projects from '../Tables/projects'\nimport projects from \"../Tables/projects\";\nimport users from \"../Tables/users\";\nimport { mapGetters } from \"vuex\";\nimport { get, put, del, post } from \"../../services/services\";\nimport Vue from \"vue\";\nVue.prototype.$confirm = MessageBox.confirm;\nexport default {\n  components: {\n    //   LightTable,\n    //   DarkTable,\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [TimePicker.name]: TimePicker,\n    [DatePicker.name]: DatePicker,\n    [CheckboxButton.name]: CheckboxButton,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Switch.name]: Switch,\n    [Checkbox.name]: Checkbox,\n    [Radio.name]: Radio,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [RadioGroup.name]: RadioGroup,\n    // [avatar.name]: avatar,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  data() {\n    return {\n      projects,\n      // users\n      currentPage: 1,\n      totalPage: 1,\n      perPage: 1,\n      posts: [],\n      dialogVisible: false,\n      dialogEdit: false,\n      dialogDelete: false,\n      dialogMultiDelete: false,\n      dialogUpdateLevel: false,\n      dialogAddLevel: false,\n      teacher: [],\n      levelTeacher: [],\n      text: '',\n      searchText: '',\n      form: {\n        username: \"\",\n        fullname: \"\",\n        email: \"\",\n        phone: \"\",\n        gender: \"\",\n        level: \"\",\n      },\n      formLevel: {\n        level: \"\",\n        subject: [],\n        canBeKeyTeacher: \"\",\n        grade: 0,\n      },\n      labelPosition: \"left\",\n      teacherObj: {},\n      levelObj: {},\n      multipleSelection: [],\n    };\n  },\n  created() {\n  },\n  watch: {\n    keyword(after, before) {\n      this.getResults();\n    },\n    \"$route.params.id\": function (id) {\n      this.getTeacherData();\n      this.handleImport();\n    },    \n  },\n  computed: {\n    ...mapGetters({\n      //map `this.doneCount` to `this.$store.getters.doneTodosCount`\n      user: \"user\",\n    }),\n  },\n  methods: {\n    getTeacherData(currentPage) {\n       if (this.searchText.length == 4){\n        this.text = this.searchText\n      }else{\n        this.text = '2020'\n      }\n      let url = \"http://localhost:8000/api/admin/teacher/subject/getall/\"+this.$route.params.id+\"?page=\" + this.currentPage;\n      // console.log(\"URL\",url)\n      get(url)\n        .then((res) => {\n          this.perPage = res.data.meta.per_page;\n          this.totalPage = res.data.meta.total;\n          this.posts = res.data.data;\n          // console.log(\"XXX\",this.posts)\n\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    handleCurrentChange(val) {\n      // this.currentRow = val;\n    },\n    handleDetail(index, row) {\n      // console.log(index, row);\n      this.dialogVisible = true;\n      let url = \"http://localhost:8000/api/admin/teacher/\" + row.id;\n      get(url)\n        .then((res) => {\n          var user = res.data.data;\n          // this.teacher = Object.entries(user).map((e) => ( { [e[0]]: e[1] } ))\n          var result = Object.keys(user).map((key) => (\n            {         \n            key: key,\n            name: user[key],\n          }\n          ));\n          var temp = result.slice();\n          temp.pop();\n          var removed = temp.splice(1,1)\n          this.teacher = temp;\n          \n          var level = result[result.length - 1].name;\n          if (level !== null) {\n            result = Object.keys(level).map((key) => ({\n              key: key,\n              name: level[key],\n            }));\n            result.shift();\n            result.pop();\n            // result[0].key = \"Trình độ\";\n            // result[1].key = \"Môn học\";\n            // result[2].key = \"Chủ Nhiệm\";\n            // result.pop();\n            // result.pop();\n            this.levelTeacher = result;\n          } else {\n            this.levelTeacher = null;\n          }\n          // console.log(\"Level\",level)\n        })\n        .catch((err) => {\n          alert(err);\n        });\n\n      // var arr = Object.keys(user).map((key) => [Number(key), user[key]]);\n      // console.log(\"arr\", arr);align=\"center\"\n    },\n    handleImport(){\n      this.$router.push(\"/admin/teacher/upload/\"+this.$route.params.id);\n    },\n    async handleEdit(index, row) {\n      this.dialogEdit = true;\n      const res = await this.getTeacherById(row.id);\n      const user = res.data;\n      // console.log(\"user\", user);\n      this.teacherObj = user.data;\n      this.form.gender = user.data.gender;\n  \n    },\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    async getTeacherById(id) {\n      let url = \"http://localhost:8000/api/admin/teacher/\" + id;\n      console.log(\"url\", url)\n      let json = await get(url);\n      return json;\n    },\n    onSubmitEdit() {\n      // console.log(\"Form\",this.form);\n      let url = \"http://localhost:8000/api/admin/teacher/update/\" + this.teacherObj.id;\n      let payload = this.form;\n      console.log(\"payload teacher\", payload)\n      put(url, payload)\n        .then((res) => {\n\n          this.dialogEdit = false;\n          this.getTeacherData(this.currentPage);\n  \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    async handleDelete(index, row) {\n\n      this.dialogDelete = true;\n      const res = await this.getTeacherById(row.id);\n      const user = res.data;\n      this.levelObj = row;\n      this.teacherObj = user.data;\n    },\n    confirmDelete() {\n      let url = \"http://localhost:8000/api/admin/teacher/\" + this.levelObj.id;\n      del(url)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogDelete = false;\n          this.getTeacherData(this.currentPage);\n          \n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n    handleSelectionChange(val) {\n      // this.currentRow = val;\n      this.multipleSelection = val;\n      if (this.multipleSelection.length > 1) {\n      }\n    },\n    confirmMultiDelete() {\n      let url = \"http://localhost:8000/api/teacher/delete\";\n      let payload = {\n        ids: \"\",\n      };\n      this.multipleSelection.forEach(function (item, index, array) {\n        // console.log(item, index);\n        if (index == 0) payload.ids = item.id;\n        else {\n          payload.ids = payload.ids + \",\" + item.id;\n        }\n        // payload.ids\n      });\n\n      post(url, payload)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogMultiDelete = false;\n          // this.getStudentData(this.currentPage);\n          //   this.arrTeacher = res.data\n          //   console.log(this.arrTeacher.length)\n          this.getTeacherData(this.currentPage);\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n   \n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          // alert(valid);\n          let url =\n            \"http://localhost:8000/api/addLevelTecher/\" + this.teacherObj.id;\n          let payload = {\n            level: \"\",\n            subject: \"\",\n            grade: \"\",\n            canBeKeyTeacher: \"\",\n          };\n          payload.level = this.formLevel.level;\n          payload.canBeKeyTeacher = this.formLevel.canBeKeyTeacher;\n          this.formLevel.subject.forEach(function (item, index, array) {\n            // console.log(item, index);\n            if (index == 0) payload.subject = item;\n            else {\n              payload.subject = payload.subject + \",\" + item;\n            }\n            // payload.ids\n          });\n          // console.log\n          put(url, payload)\n            .then((res) => {\n              // console.log(\"Respon\", res);\n              this.dialogAddLevel = false;\n              this.getTeacherData(this.currentPage);\n              this.$refs[formName].resetFields();\n              //   this.arrTeacher = res.data\n              //   console.log(this.arrTeacher.length)\n            })\n            .catch((err) => {\n              alert(err);\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    handleCloseAddForm(formName) {\n      this.dialogAddLevel = false;\n      this.$refs[formName].resetFields();\n    },\n   \n    handleCloseSubmitForm(formName) {\n      this.dialogUpdateLevel = false;\n      this.$refs[formName].resetFields();\n    },\n    submitEditLevelForm(formName) {\n      let url =\n        \"http://localhost:8000/api/updateLevelTecher/\" + this.teacherObj.id;\n      let payload = {\n        level: \"\",\n        subject: \"\",\n        // grade: \"8\",\n        canBeKeyTeacher: \"\",\n      };\n      payload.level = this.formLevel.level;\n      payload.canBeKeyTeacher = this.formLevel.canBeKeyTeacher;\n      this.formLevel.subject.forEach(function (item, index, array) {\n        // console.log(item, index);\n        if (index == 0) payload.subject = item;\n        else {\n          payload.subject = payload.subject + \",\" + item;\n        }\n        // payload.ids\n      });\n      // console.log\n      put(url, payload)\n        .then((res) => {\n          // console.log(\"Respon\", res);\n          this.dialogUpdateLevel = false;\n          this.getTeacherData(this.currentPage);\n          this.$refs[formName].resetFields();\n          //   this.arrTeacher = res.data\n          //   console.log(this.arrTeacher.length)\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  mounted(currentPage) {\n    this.getTeacherData(currentPage);\n  },\n};\n</script>\n<style>\n.el-table.table-dark {\n  background-color: #172b4d;\n  color: #f8f9fe;\n}\n\n.el-table.table-dark th,\n.el-table.table-dark tr {\n  background-color: #172b4d;\n}\n\n.el-table.table-dark td,\n.el-table.table-dark th.is-leaf {\n  border-bottom: none;\n}\n.el-table .cell,\n.el-table th div {\n  overflow: inherit !important;\n}\n.el-table th > .cell {\n  width: auto;\n}\n.el-table th {\n  text-align: center;\n}\n.el-select {\n  width: 90%;\n}\n.left-10 {\n  left: 10%;\n}\ndiv.right{\n  \n    /* align-content: right; */\n    margin-left: 850px; \n        }\n</style>\n"]}]}